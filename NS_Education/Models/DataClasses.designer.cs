#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NS_Education.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_NS_Education")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertB_Category(B_Category instance);
    partial void UpdateB_Category(B_Category instance);
    partial void DeleteB_Category(B_Category instance);
    partial void InsertUserLog(UserLog instance);
    partial void UpdateUserLog(UserLog instance);
    partial void DeleteUserLog(UserLog instance);
    partial void InsertB_Device(B_Device instance);
    partial void UpdateB_Device(B_Device instance);
    partial void DeleteB_Device(B_Device instance);
    partial void InsertB_OrderCode(B_OrderCode instance);
    partial void UpdateB_OrderCode(B_OrderCode instance);
    partial void DeleteB_OrderCode(B_OrderCode instance);
    partial void InsertB_Partner(B_Partner instance);
    partial void UpdateB_Partner(B_Partner instance);
    partial void DeleteB_Partner(B_Partner instance);
    partial void InsertB_PartnerItem(B_PartnerItem instance);
    partial void UpdateB_PartnerItem(B_PartnerItem instance);
    partial void DeleteB_PartnerItem(B_PartnerItem instance);
    partial void InsertB_SiteData(B_SiteData instance);
    partial void UpdateB_SiteData(B_SiteData instance);
    partial void DeleteB_SiteData(B_SiteData instance);
    partial void InsertB_StaticCode(B_StaticCode instance);
    partial void UpdateB_StaticCode(B_StaticCode instance);
    partial void DeleteB_StaticCode(B_StaticCode instance);
    partial void InsertBusinessUser(BusinessUser instance);
    partial void UpdateBusinessUser(BusinessUser instance);
    partial void DeleteBusinessUser(BusinessUser instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerGift(CustomerGift instance);
    partial void UpdateCustomerGift(CustomerGift instance);
    partial void DeleteCustomerGift(CustomerGift instance);
    partial void InsertCustomerQuestion(CustomerQuestion instance);
    partial void UpdateCustomerQuestion(CustomerQuestion instance);
    partial void DeleteCustomerQuestion(CustomerQuestion instance);
    partial void InsertCustomerVisit(CustomerVisit instance);
    partial void UpdateCustomerVisit(CustomerVisit instance);
    partial void DeleteCustomerVisit(CustomerVisit instance);
    partial void InsertD_Company(D_Company instance);
    partial void UpdateD_Company(D_Company instance);
    partial void DeleteD_Company(D_Company instance);
    partial void InsertD_Department(D_Department instance);
    partial void UpdateD_Department(D_Department instance);
    partial void DeleteD_Department(D_Department instance);
    partial void InsertD_FoodCategory(D_FoodCategory instance);
    partial void UpdateD_FoodCategory(D_FoodCategory instance);
    partial void DeleteD_FoodCategory(D_FoodCategory instance);
    partial void InsertD_Hall(D_Hall instance);
    partial void UpdateD_Hall(D_Hall instance);
    partial void DeleteD_Hall(D_Hall instance);
    partial void InsertD_OtherPayItem(D_OtherPayItem instance);
    partial void UpdateD_OtherPayItem(D_OtherPayItem instance);
    partial void DeleteD_OtherPayItem(D_OtherPayItem instance);
    partial void InsertD_TimeSpan(D_TimeSpan instance);
    partial void UpdateD_TimeSpan(D_TimeSpan instance);
    partial void DeleteD_TimeSpan(D_TimeSpan instance);
    partial void InsertD_Zip(D_Zip instance);
    partial void UpdateD_Zip(D_Zip instance);
    partial void DeleteD_Zip(D_Zip instance);
    partial void InsertGroupData(GroupData instance);
    partial void UpdateGroupData(GroupData instance);
    partial void DeleteGroupData(GroupData instance);
    partial void InsertM_Customer_Category(M_Customer_Category instance);
    partial void UpdateM_Customer_Category(M_Customer_Category instance);
    partial void DeleteM_Customer_Category(M_Customer_Category instance);
    partial void InsertM_Department_Category(M_Department_Category instance);
    partial void UpdateM_Department_Category(M_Department_Category instance);
    partial void DeleteM_Department_Category(M_Department_Category instance);
    partial void InsertM_Group_Menu(M_Group_Menu instance);
    partial void UpdateM_Group_Menu(M_Group_Menu instance);
    partial void DeleteM_Group_Menu(M_Group_Menu instance);
    partial void InsertM_Group_User(M_Group_User instance);
    partial void UpdateM_Group_User(M_Group_User instance);
    partial void DeleteM_Group_User(M_Group_User instance);
    partial void InsertM_Partner_Category(M_Partner_Category instance);
    partial void UpdateM_Partner_Category(M_Partner_Category instance);
    partial void DeleteM_Partner_Category(M_Partner_Category instance);
    partial void InsertMenuData(MenuData instance);
    partial void UpdateMenuData(MenuData instance);
    partial void DeleteMenuData(MenuData instance);
    partial void InsertResver_Bill_Detail(Resver_Bill_Detail instance);
    partial void UpdateResver_Bill_Detail(Resver_Bill_Detail instance);
    partial void DeleteResver_Bill_Detail(Resver_Bill_Detail instance);
    partial void InsertResver_Bill_Header(Resver_Bill_Header instance);
    partial void UpdateResver_Bill_Header(Resver_Bill_Header instance);
    partial void DeleteResver_Bill_Header(Resver_Bill_Header instance);
    partial void InsertResver_Device(Resver_Device instance);
    partial void UpdateResver_Device(Resver_Device instance);
    partial void DeleteResver_Device(Resver_Device instance);
    partial void InsertResver_GiveBack(Resver_GiveBack instance);
    partial void UpdateResver_GiveBack(Resver_GiveBack instance);
    partial void DeleteResver_GiveBack(Resver_GiveBack instance);
    partial void InsertResver_Head(Resver_Head instance);
    partial void UpdateResver_Head(Resver_Head instance);
    partial void DeleteResver_Head(Resver_Head instance);
    partial void InsertResver_Other(Resver_Other instance);
    partial void UpdateResver_Other(Resver_Other instance);
    partial void DeleteResver_Other(Resver_Other instance);
    partial void InsertResver_Site(Resver_Site instance);
    partial void UpdateResver_Site(Resver_Site instance);
    partial void DeleteResver_Site(Resver_Site instance);
    partial void InsertResver_Throw(Resver_Throw instance);
    partial void UpdateResver_Throw(Resver_Throw instance);
    partial void DeleteResver_Throw(Resver_Throw instance);
    partial void InsertResver_Throw_Food(Resver_Throw_Food instance);
    partial void UpdateResver_Throw_Food(Resver_Throw_Food instance);
    partial void DeleteResver_Throw_Food(Resver_Throw_Food instance);
    partial void InsertUserData(UserData instance);
    partial void UpdateUserData(UserData instance);
    partial void DeleteUserData(UserData instance);
    partial void InsertD_PayType(D_PayType instance);
    partial void UpdateD_PayType(D_PayType instance);
    partial void DeleteD_PayType(D_PayType instance);
    #endregion
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<B_Category> B_Category
		{
			get
			{
				return this.GetTable<B_Category>();
			}
		}
		
		public System.Data.Linq.Table<UserLog> UserLog
		{
			get
			{
				return this.GetTable<UserLog>();
			}
		}
		
		public System.Data.Linq.Table<B_Device> B_Device
		{
			get
			{
				return this.GetTable<B_Device>();
			}
		}
		
		public System.Data.Linq.Table<B_OrderCode> B_OrderCode
		{
			get
			{
				return this.GetTable<B_OrderCode>();
			}
		}
		
		public System.Data.Linq.Table<B_Partner> B_Partner
		{
			get
			{
				return this.GetTable<B_Partner>();
			}
		}
		
		public System.Data.Linq.Table<B_PartnerItem> B_PartnerItem
		{
			get
			{
				return this.GetTable<B_PartnerItem>();
			}
		}
		
		public System.Data.Linq.Table<B_SiteData> B_SiteData
		{
			get
			{
				return this.GetTable<B_SiteData>();
			}
		}
		
		public System.Data.Linq.Table<B_StaticCode> B_StaticCode
		{
			get
			{
				return this.GetTable<B_StaticCode>();
			}
		}
		
		public System.Data.Linq.Table<BusinessUser> BusinessUser
		{
			get
			{
				return this.GetTable<BusinessUser>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerGift> CustomerGift
		{
			get
			{
				return this.GetTable<CustomerGift>();
			}
		}
		
		public System.Data.Linq.Table<CustomerQuestion> CustomerQuestion
		{
			get
			{
				return this.GetTable<CustomerQuestion>();
			}
		}
		
		public System.Data.Linq.Table<CustomerVisit> CustomerVisit
		{
			get
			{
				return this.GetTable<CustomerVisit>();
			}
		}
		
		public System.Data.Linq.Table<D_Company> D_Company
		{
			get
			{
				return this.GetTable<D_Company>();
			}
		}
		
		public System.Data.Linq.Table<D_Department> D_Department
		{
			get
			{
				return this.GetTable<D_Department>();
			}
		}
		
		public System.Data.Linq.Table<D_FoodCategory> D_FoodCategory
		{
			get
			{
				return this.GetTable<D_FoodCategory>();
			}
		}
		
		public System.Data.Linq.Table<D_Hall> D_Hall
		{
			get
			{
				return this.GetTable<D_Hall>();
			}
		}
		
		public System.Data.Linq.Table<D_OtherPayItem> D_OtherPayItem
		{
			get
			{
				return this.GetTable<D_OtherPayItem>();
			}
		}
		
		public System.Data.Linq.Table<D_TimeSpan> D_TimeSpan
		{
			get
			{
				return this.GetTable<D_TimeSpan>();
			}
		}
		
		public System.Data.Linq.Table<D_Zip> D_Zip
		{
			get
			{
				return this.GetTable<D_Zip>();
			}
		}
		
		public System.Data.Linq.Table<GroupData> GroupData
		{
			get
			{
				return this.GetTable<GroupData>();
			}
		}
		
		public System.Data.Linq.Table<M_Customer_Category> M_Customer_Category
		{
			get
			{
				return this.GetTable<M_Customer_Category>();
			}
		}
		
		public System.Data.Linq.Table<M_Department_Category> M_Department_Category
		{
			get
			{
				return this.GetTable<M_Department_Category>();
			}
		}
		
		public System.Data.Linq.Table<M_Group_Menu> M_Group_Menu
		{
			get
			{
				return this.GetTable<M_Group_Menu>();
			}
		}
		
		public System.Data.Linq.Table<M_Group_User> M_Group_User
		{
			get
			{
				return this.GetTable<M_Group_User>();
			}
		}
		
		public System.Data.Linq.Table<M_Partner_Category> M_Partner_Category
		{
			get
			{
				return this.GetTable<M_Partner_Category>();
			}
		}
		
		public System.Data.Linq.Table<MenuData> MenuData
		{
			get
			{
				return this.GetTable<MenuData>();
			}
		}
		
		public System.Data.Linq.Table<Resver_Bill_Detail> Resver_Bill_Detail
		{
			get
			{
				return this.GetTable<Resver_Bill_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Resver_Bill_Header> Resver_Bill_Header
		{
			get
			{
				return this.GetTable<Resver_Bill_Header>();
			}
		}
		
		public System.Data.Linq.Table<Resver_Device> Resver_Device
		{
			get
			{
				return this.GetTable<Resver_Device>();
			}
		}
		
		public System.Data.Linq.Table<Resver_GiveBack> Resver_GiveBack
		{
			get
			{
				return this.GetTable<Resver_GiveBack>();
			}
		}
		
		public System.Data.Linq.Table<Resver_Head> Resver_Head
		{
			get
			{
				return this.GetTable<Resver_Head>();
			}
		}
		
		public System.Data.Linq.Table<Resver_Other> Resver_Other
		{
			get
			{
				return this.GetTable<Resver_Other>();
			}
		}
		
		public System.Data.Linq.Table<Resver_Site> Resver_Site
		{
			get
			{
				return this.GetTable<Resver_Site>();
			}
		}
		
		public System.Data.Linq.Table<Resver_Throw> Resver_Throw
		{
			get
			{
				return this.GetTable<Resver_Throw>();
			}
		}
		
		public System.Data.Linq.Table<Resver_Throw_Food> Resver_Throw_Food
		{
			get
			{
				return this.GetTable<Resver_Throw_Food>();
			}
		}
		
		public System.Data.Linq.Table<UserData> UserData
		{
			get
			{
				return this.GetTable<UserData>();
			}
		}
		
		public System.Data.Linq.Table<D_PayType> D_PayType
		{
			get
			{
				return this.GetTable<D_PayType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_Category")]
	public partial class B_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BCID;
		
		private int _CategoryType;
		
		private int _ParentID;
		
		private string _Code;
		
		private string _TitleC;
		
		private string _TitleE;
		
		private int _SortNo;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<B_Device> _B_Device;
		
		private EntitySet<B_Partner> _B_Partner;
		
		private EntitySet<B_SiteData> _B_SiteData;
		
		private EntitySet<D_Company> _D_Company;
		
		private EntitySet<M_Customer_Category> _M_Customer_Category;
		
		private EntitySet<M_Department_Category> _M_Department_Category;
		
		private EntitySet<M_Partner_Category> _M_Partner_Category;
		
		private EntitySet<Resver_Bill_Header> _Resver_Bill_Header;
		
		private EntitySet<D_PayType> _D_PayType;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBCIDChanging(int value);
    partial void OnBCIDChanged();
    partial void OnCategoryTypeChanging(int value);
    partial void OnCategoryTypeChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleCChanging(string value);
    partial void OnTitleCChanged();
    partial void OnTitleEChanging(string value);
    partial void OnTitleEChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public B_Category()
		{
			this._B_Device = new EntitySet<B_Device>(new Action<B_Device>(this.attach_B_Device), new Action<B_Device>(this.detach_B_Device));
			this._B_Partner = new EntitySet<B_Partner>(new Action<B_Partner>(this.attach_B_Partner), new Action<B_Partner>(this.detach_B_Partner));
			this._B_SiteData = new EntitySet<B_SiteData>(new Action<B_SiteData>(this.attach_B_SiteData), new Action<B_SiteData>(this.detach_B_SiteData));
			this._D_Company = new EntitySet<D_Company>(new Action<D_Company>(this.attach_D_Company), new Action<D_Company>(this.detach_D_Company));
			this._M_Customer_Category = new EntitySet<M_Customer_Category>(new Action<M_Customer_Category>(this.attach_M_Customer_Category), new Action<M_Customer_Category>(this.detach_M_Customer_Category));
			this._M_Department_Category = new EntitySet<M_Department_Category>(new Action<M_Department_Category>(this.attach_M_Department_Category), new Action<M_Department_Category>(this.detach_M_Department_Category));
			this._M_Partner_Category = new EntitySet<M_Partner_Category>(new Action<M_Partner_Category>(this.attach_M_Partner_Category), new Action<M_Partner_Category>(this.detach_M_Partner_Category));
			this._Resver_Bill_Header = new EntitySet<Resver_Bill_Header>(new Action<Resver_Bill_Header>(this.attach_Resver_Bill_Header), new Action<Resver_Bill_Header>(this.detach_Resver_Bill_Header));
			this._D_PayType = new EntitySet<D_PayType>(new Action<D_PayType>(this.attach_D_PayType), new Action<D_PayType>(this.detach_D_PayType));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryType", DbType="Int NOT NULL")]
		public int CategoryType
		{
			get
			{
				return this._CategoryType;
			}
			set
			{
				if ((this._CategoryType != value))
				{
					this.OnCategoryTypeChanging(value);
					this.SendPropertyChanging();
					this._CategoryType = value;
					this.SendPropertyChanged("CategoryType");
					this.OnCategoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleC", DbType="NVarChar(50)")]
		public string TitleC
		{
			get
			{
				return this._TitleC;
			}
			set
			{
				if ((this._TitleC != value))
				{
					this.OnTitleCChanging(value);
					this.SendPropertyChanging();
					this._TitleC = value;
					this.SendPropertyChanged("TitleC");
					this.OnTitleCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleE", DbType="NVarChar(50)")]
		public string TitleE
		{
			get
			{
				return this._TitleE;
			}
			set
			{
				if ((this._TitleE != value))
				{
					this.OnTitleEChanging(value);
					this.SendPropertyChanging();
					this._TitleE = value;
					this.SendPropertyChanged("TitleE");
					this.OnTitleEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_B_Device", Storage="_B_Device", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<B_Device> B_Device
		{
			get
			{
				return this._B_Device;
			}
			set
			{
				this._B_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_B_Partner", Storage="_B_Partner", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<B_Partner> B_Partner
		{
			get
			{
				return this._B_Partner;
			}
			set
			{
				this._B_Partner.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_B_SiteData", Storage="_B_SiteData", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<B_SiteData> B_SiteData
		{
			get
			{
				return this._B_SiteData;
			}
			set
			{
				this._B_SiteData.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_D_Company", Storage="_D_Company", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<D_Company> D_Company
		{
			get
			{
				return this._D_Company;
			}
			set
			{
				this._D_Company.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_M_Customer_Category", Storage="_M_Customer_Category", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<M_Customer_Category> M_Customer_Category
		{
			get
			{
				return this._M_Customer_Category;
			}
			set
			{
				this._M_Customer_Category.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_M_Department_Category", Storage="_M_Department_Category", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<M_Department_Category> M_Department_Category
		{
			get
			{
				return this._M_Department_Category;
			}
			set
			{
				this._M_Department_Category.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_M_Partner_Category", Storage="_M_Partner_Category", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<M_Partner_Category> M_Partner_Category
		{
			get
			{
				return this._M_Partner_Category;
			}
			set
			{
				this._M_Partner_Category.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_Resver_Bill_Header", Storage="_Resver_Bill_Header", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<Resver_Bill_Header> Resver_Bill_Header
		{
			get
			{
				return this._Resver_Bill_Header;
			}
			set
			{
				this._Resver_Bill_Header.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_D_PayType", Storage="_D_PayType", ThisKey="BCID", OtherKey="BCID")]
		public EntitySet<D_PayType> D_PayType
		{
			get
			{
				return this._D_PayType;
			}
			set
			{
				this._D_PayType.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_B_Device(B_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_B_Device(B_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
		
		private void attach_B_Partner(B_Partner entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_B_Partner(B_Partner entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
		
		private void attach_B_SiteData(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_B_SiteData(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
		
		private void attach_D_Company(D_Company entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_D_Company(D_Company entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
		
		private void attach_M_Customer_Category(M_Customer_Category entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_M_Customer_Category(M_Customer_Category entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
		
		private void attach_M_Department_Category(M_Department_Category entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_M_Department_Category(M_Department_Category entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
		
		private void attach_M_Partner_Category(M_Partner_Category entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_M_Partner_Category(M_Partner_Category entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
		
		private void attach_Resver_Bill_Header(Resver_Bill_Header entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_Resver_Bill_Header(Resver_Bill_Header entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
		
		private void attach_D_PayType(D_PayType entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = this;
		}
		
		private void detach_D_PayType(D_PayType entity)
		{
			this.SendPropertyChanging();
			entity.B_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLog")]
	public partial class UserLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ULID;
		
		private int _UID;
		
		private string _TargetTable;
		
		private int _TargetID;
		
		private int _ControlType;
		
		private System.DateTime _CreDate;
		
		private EntityRef<UserData> _UserData;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnULIDChanging(long value);
    partial void OnULIDChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnTargetTableChanging(string value);
    partial void OnTargetTableChanged();
    partial void OnTargetIDChanging(int value);
    partial void OnTargetIDChanged();
    partial void OnControlTypeChanging(int value);
    partial void OnControlTypeChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    #endregion
		
		public UserLog()
		{
			this._UserData = default(EntityRef<UserData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ULID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ULID
		{
			get
			{
				return this._ULID;
			}
			set
			{
				if ((this._ULID != value))
				{
					this.OnULIDChanging(value);
					this.SendPropertyChanging();
					this._ULID = value;
					this.SendPropertyChanged("ULID");
					this.OnULIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetTable", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TargetTable
		{
			get
			{
				return this._TargetTable;
			}
			set
			{
				if ((this._TargetTable != value))
				{
					this.OnTargetTableChanging(value);
					this.SendPropertyChanging();
					this._TargetTable = value;
					this.SendPropertyChanged("TargetTable");
					this.OnTargetTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int NOT NULL")]
		public int TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlType", DbType="Int NOT NULL")]
		public int ControlType
		{
			get
			{
				return this._ControlType;
			}
			set
			{
				if ((this._ControlType != value))
				{
					this.OnControlTypeChanging(value);
					this.SendPropertyChanging();
					this._ControlType = value;
					this.SendPropertyChanged("ControlType");
					this.OnControlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserData_UserLog", Storage="_UserData", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserData UserData
		{
			get
			{
				return this._UserData.Entity;
			}
			set
			{
				UserData previousValue = this._UserData.Entity;
				if (((previousValue != value) 
							|| (this._UserData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserData.Entity = null;
						previousValue.UserLog.Remove(this);
					}
					this._UserData.Entity = value;
					if ((value != null))
					{
						value.UserLog.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_Device")]
	public partial class B_Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BDID;
		
		private int _BCID;
		
		private int _BSCID;
		
		private int _BOCID;
		
		private int _DHID;
		
		private string _Code;
		
		private string _Title;
		
		private int _Ct;
		
		private int _UnitPrice;
		
		private int _InPrice;
		
		private int _OutPrice;
		
		private string _SupplierTitle;
		
		private string _SupplierName;
		
		private string _SupplierPhone;
		
		private string _Repair;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Device> _Resver_Device;
		
		private EntityRef<B_Category> _B_Category;
		
		private EntityRef<B_OrderCode> _B_OrderCode;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<D_Hall> _D_Hall;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBDIDChanging(int value);
    partial void OnBDIDChanged();
    partial void OnBCIDChanging(int value);
    partial void OnBCIDChanged();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnBOCIDChanging(int value);
    partial void OnBOCIDChanged();
    partial void OnDHIDChanging(int value);
    partial void OnDHIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnInPriceChanging(int value);
    partial void OnInPriceChanged();
    partial void OnOutPriceChanging(int value);
    partial void OnOutPriceChanged();
    partial void OnSupplierTitleChanging(string value);
    partial void OnSupplierTitleChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierPhoneChanging(string value);
    partial void OnSupplierPhoneChanged();
    partial void OnRepairChanging(string value);
    partial void OnRepairChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public B_Device()
		{
			this._Resver_Device = new EntitySet<Resver_Device>(new Action<Resver_Device>(this.attach_Resver_Device), new Action<Resver_Device>(this.detach_Resver_Device));
			this._B_Category = default(EntityRef<B_Category>);
			this._B_OrderCode = default(EntityRef<B_OrderCode>);
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._D_Hall = default(EntityRef<D_Hall>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BDID
		{
			get
			{
				return this._BDID;
			}
			set
			{
				if ((this._BDID != value))
				{
					this.OnBDIDChanging(value);
					this.SendPropertyChanging();
					this._BDID = value;
					this.SendPropertyChanged("BDID");
					this.OnBDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int NOT NULL")]
		public int BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", DbType="Int NOT NULL")]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOCID", DbType="Int NOT NULL")]
		public int BOCID
		{
			get
			{
				return this._BOCID;
			}
			set
			{
				if ((this._BOCID != value))
				{
					if (this._B_OrderCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOCIDChanging(value);
					this.SendPropertyChanging();
					this._BOCID = value;
					this.SendPropertyChanged("BOCID");
					this.OnBOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHID", DbType="Int NOT NULL")]
		public int DHID
		{
			get
			{
				return this._DHID;
			}
			set
			{
				if ((this._DHID != value))
				{
					if (this._D_Hall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDHIDChanging(value);
					this.SendPropertyChanging();
					this._DHID = value;
					this.SendPropertyChanged("DHID");
					this.OnDHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPrice", DbType="Int NOT NULL")]
		public int InPrice
		{
			get
			{
				return this._InPrice;
			}
			set
			{
				if ((this._InPrice != value))
				{
					this.OnInPriceChanging(value);
					this.SendPropertyChanging();
					this._InPrice = value;
					this.SendPropertyChanged("InPrice");
					this.OnInPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutPrice", DbType="Int NOT NULL")]
		public int OutPrice
		{
			get
			{
				return this._OutPrice;
			}
			set
			{
				if ((this._OutPrice != value))
				{
					this.OnOutPriceChanging(value);
					this.SendPropertyChanging();
					this._OutPrice = value;
					this.SendPropertyChanged("OutPrice");
					this.OnOutPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierTitle", DbType="NVarChar(100)")]
		public string SupplierTitle
		{
			get
			{
				return this._SupplierTitle;
			}
			set
			{
				if ((this._SupplierTitle != value))
				{
					this.OnSupplierTitleChanging(value);
					this.SendPropertyChanging();
					this._SupplierTitle = value;
					this.SendPropertyChanged("SupplierTitle");
					this.OnSupplierTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(100)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPhone", DbType="NVarChar(30)")]
		public string SupplierPhone
		{
			get
			{
				return this._SupplierPhone;
			}
			set
			{
				if ((this._SupplierPhone != value))
				{
					this.OnSupplierPhoneChanging(value);
					this.SendPropertyChanging();
					this._SupplierPhone = value;
					this.SendPropertyChanged("SupplierPhone");
					this.OnSupplierPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Repair", DbType="NVarChar(MAX)")]
		public string Repair
		{
			get
			{
				return this._Repair;
			}
			set
			{
				if ((this._Repair != value))
				{
					this.OnRepairChanging(value);
					this.SendPropertyChanging();
					this._Repair = value;
					this.SendPropertyChanged("Repair");
					this.OnRepairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Device_Resver_Device", Storage="_Resver_Device", ThisKey="BDID", OtherKey="BDID")]
		public EntitySet<Resver_Device> Resver_Device
		{
			get
			{
				return this._Resver_Device;
			}
			set
			{
				this._Resver_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_B_Device", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.B_Device.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.B_Device.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(int);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_OrderCode_B_Device", Storage="_B_OrderCode", ThisKey="BOCID", OtherKey="BOCID", IsForeignKey=true)]
		public B_OrderCode B_OrderCode
		{
			get
			{
				return this._B_OrderCode.Entity;
			}
			set
			{
				B_OrderCode previousValue = this._B_OrderCode.Entity;
				if (((previousValue != value) 
							|| (this._B_OrderCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_OrderCode.Entity = null;
						previousValue.B_Device.Remove(this);
					}
					this._B_OrderCode.Entity = value;
					if ((value != null))
					{
						value.B_Device.Add(this);
						this._BOCID = value.BOCID;
					}
					else
					{
						this._BOCID = default(int);
					}
					this.SendPropertyChanged("B_OrderCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_Device", Storage="_B_StaticCode", ThisKey="BSCID", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.B_Device.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.B_Device.Add(this);
						this._BSCID = value.BSCID;
					}
					else
					{
						this._BSCID = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Hall_B_Device", Storage="_D_Hall", ThisKey="DHID", OtherKey="DHID", IsForeignKey=true)]
		public D_Hall D_Hall
		{
			get
			{
				return this._D_Hall.Entity;
			}
			set
			{
				D_Hall previousValue = this._D_Hall.Entity;
				if (((previousValue != value) 
							|| (this._D_Hall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_Hall.Entity = null;
						previousValue.B_Device.Remove(this);
					}
					this._D_Hall.Entity = value;
					if ((value != null))
					{
						value.B_Device.Add(this);
						this._DHID = value.DHID;
					}
					else
					{
						this._DHID = default(int);
					}
					this.SendPropertyChanged("D_Hall");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Device(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_Device = this;
		}
		
		private void detach_Resver_Device(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_Device = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_OrderCode")]
	public partial class B_OrderCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BOCID;
		
		private int _CodeType;
		
		private string _Code;
		
		private string _Title;
		
		private string _PrintTitle;
		
		private string _PrintNote;
		
		private int _SortNo;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<B_Device> _B_Device;
		
		private EntitySet<B_PartnerItem> _B_PartnerItem;
		
		private EntitySet<B_SiteData> _B_SiteData;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBOCIDChanging(int value);
    partial void OnBOCIDChanged();
    partial void OnCodeTypeChanging(int value);
    partial void OnCodeTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPrintTitleChanging(string value);
    partial void OnPrintTitleChanged();
    partial void OnPrintNoteChanging(string value);
    partial void OnPrintNoteChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public B_OrderCode()
		{
			this._B_Device = new EntitySet<B_Device>(new Action<B_Device>(this.attach_B_Device), new Action<B_Device>(this.detach_B_Device));
			this._B_PartnerItem = new EntitySet<B_PartnerItem>(new Action<B_PartnerItem>(this.attach_B_PartnerItem), new Action<B_PartnerItem>(this.detach_B_PartnerItem));
			this._B_SiteData = new EntitySet<B_SiteData>(new Action<B_SiteData>(this.attach_B_SiteData), new Action<B_SiteData>(this.detach_B_SiteData));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BOCID
		{
			get
			{
				return this._BOCID;
			}
			set
			{
				if ((this._BOCID != value))
				{
					this.OnBOCIDChanging(value);
					this.SendPropertyChanging();
					this._BOCID = value;
					this.SendPropertyChanged("BOCID");
					this.OnBOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeType", DbType="Int NOT NULL")]
		public int CodeType
		{
			get
			{
				return this._CodeType;
			}
			set
			{
				if ((this._CodeType != value))
				{
					this.OnCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._CodeType = value;
					this.SendPropertyChanged("CodeType");
					this.OnCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTitle", DbType="NVarChar(100)")]
		public string PrintTitle
		{
			get
			{
				return this._PrintTitle;
			}
			set
			{
				if ((this._PrintTitle != value))
				{
					this.OnPrintTitleChanging(value);
					this.SendPropertyChanging();
					this._PrintTitle = value;
					this.SendPropertyChanged("PrintTitle");
					this.OnPrintTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintNote", DbType="NVarChar(100)")]
		public string PrintNote
		{
			get
			{
				return this._PrintNote;
			}
			set
			{
				if ((this._PrintNote != value))
				{
					this.OnPrintNoteChanging(value);
					this.SendPropertyChanging();
					this._PrintNote = value;
					this.SendPropertyChanged("PrintNote");
					this.OnPrintNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_OrderCode_B_Device", Storage="_B_Device", ThisKey="BOCID", OtherKey="BOCID")]
		public EntitySet<B_Device> B_Device
		{
			get
			{
				return this._B_Device;
			}
			set
			{
				this._B_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_OrderCode_B_PartnerItem", Storage="_B_PartnerItem", ThisKey="BOCID", OtherKey="BOCID")]
		public EntitySet<B_PartnerItem> B_PartnerItem
		{
			get
			{
				return this._B_PartnerItem;
			}
			set
			{
				this._B_PartnerItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_OrderCode_B_SiteData", Storage="_B_SiteData", ThisKey="BOCID", OtherKey="BOCID")]
		public EntitySet<B_SiteData> B_SiteData
		{
			get
			{
				return this._B_SiteData;
			}
			set
			{
				this._B_SiteData.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_B_Device(B_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_OrderCode = this;
		}
		
		private void detach_B_Device(B_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_OrderCode = null;
		}
		
		private void attach_B_PartnerItem(B_PartnerItem entity)
		{
			this.SendPropertyChanging();
			entity.B_OrderCode = this;
		}
		
		private void detach_B_PartnerItem(B_PartnerItem entity)
		{
			this.SendPropertyChanging();
			entity.B_OrderCode = null;
		}
		
		private void attach_B_SiteData(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.B_OrderCode = this;
		}
		
		private void detach_B_SiteData(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.B_OrderCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_Partner")]
	public partial class B_Partner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BPID;
		
		private int _BCID;
		
		private string _Code;
		
		private string _Title;
		
		private string _Compilation;
		
		private int _BSCID;
		
		private string _Email;
		
		private bool _CleanFlag;
		
		private int _CleanPrice;
		
		private System.DateTime _CleanSDate;
		
		private System.DateTime _CleanEDate;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<B_PartnerItem> _B_PartnerItem;
		
		private EntitySet<M_Partner_Category> _M_Partner_Category;
		
		private EntitySet<Resver_Throw_Food> _Resver_Throw_Food;
		
		private EntityRef<B_Category> _B_Category;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBPIDChanging(int value);
    partial void OnBPIDChanged();
    partial void OnBCIDChanging(int value);
    partial void OnBCIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCompilationChanging(string value);
    partial void OnCompilationChanged();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCleanFlagChanging(bool value);
    partial void OnCleanFlagChanged();
    partial void OnCleanPriceChanging(int value);
    partial void OnCleanPriceChanged();
    partial void OnCleanSDateChanging(System.DateTime value);
    partial void OnCleanSDateChanged();
    partial void OnCleanEDateChanging(System.DateTime value);
    partial void OnCleanEDateChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public B_Partner()
		{
			this._B_PartnerItem = new EntitySet<B_PartnerItem>(new Action<B_PartnerItem>(this.attach_B_PartnerItem), new Action<B_PartnerItem>(this.detach_B_PartnerItem));
			this._M_Partner_Category = new EntitySet<M_Partner_Category>(new Action<M_Partner_Category>(this.attach_M_Partner_Category), new Action<M_Partner_Category>(this.detach_M_Partner_Category));
			this._Resver_Throw_Food = new EntitySet<Resver_Throw_Food>(new Action<Resver_Throw_Food>(this.attach_Resver_Throw_Food), new Action<Resver_Throw_Food>(this.detach_Resver_Throw_Food));
			this._B_Category = default(EntityRef<B_Category>);
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BPID
		{
			get
			{
				return this._BPID;
			}
			set
			{
				if ((this._BPID != value))
				{
					this.OnBPIDChanging(value);
					this.SendPropertyChanging();
					this._BPID = value;
					this.SendPropertyChanged("BPID");
					this.OnBPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int NOT NULL")]
		public int BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compilation", DbType="VarChar(8)")]
		public string Compilation
		{
			get
			{
				return this._Compilation;
			}
			set
			{
				if ((this._Compilation != value))
				{
					this.OnCompilationChanging(value);
					this.SendPropertyChanging();
					this._Compilation = value;
					this.SendPropertyChanged("Compilation");
					this.OnCompilationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", DbType="Int NOT NULL")]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleanFlag", DbType="Bit NOT NULL")]
		public bool CleanFlag
		{
			get
			{
				return this._CleanFlag;
			}
			set
			{
				if ((this._CleanFlag != value))
				{
					this.OnCleanFlagChanging(value);
					this.SendPropertyChanging();
					this._CleanFlag = value;
					this.SendPropertyChanged("CleanFlag");
					this.OnCleanFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleanPrice", DbType="Int NOT NULL")]
		public int CleanPrice
		{
			get
			{
				return this._CleanPrice;
			}
			set
			{
				if ((this._CleanPrice != value))
				{
					this.OnCleanPriceChanging(value);
					this.SendPropertyChanging();
					this._CleanPrice = value;
					this.SendPropertyChanged("CleanPrice");
					this.OnCleanPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleanSDate", DbType="DateTime NOT NULL")]
		public System.DateTime CleanSDate
		{
			get
			{
				return this._CleanSDate;
			}
			set
			{
				if ((this._CleanSDate != value))
				{
					this.OnCleanSDateChanging(value);
					this.SendPropertyChanging();
					this._CleanSDate = value;
					this.SendPropertyChanged("CleanSDate");
					this.OnCleanSDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleanEDate", DbType="DateTime NOT NULL")]
		public System.DateTime CleanEDate
		{
			get
			{
				return this._CleanEDate;
			}
			set
			{
				if ((this._CleanEDate != value))
				{
					this.OnCleanEDateChanging(value);
					this.SendPropertyChanging();
					this._CleanEDate = value;
					this.SendPropertyChanged("CleanEDate");
					this.OnCleanEDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Partner_B_PartnerItem", Storage="_B_PartnerItem", ThisKey="BPID", OtherKey="BPID")]
		public EntitySet<B_PartnerItem> B_PartnerItem
		{
			get
			{
				return this._B_PartnerItem;
			}
			set
			{
				this._B_PartnerItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Partner_M_Partner_Category", Storage="_M_Partner_Category", ThisKey="BPID", OtherKey="BPID")]
		public EntitySet<M_Partner_Category> M_Partner_Category
		{
			get
			{
				return this._M_Partner_Category;
			}
			set
			{
				this._M_Partner_Category.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Partner_Resver_Throw_Food", Storage="_Resver_Throw_Food", ThisKey="BPID", OtherKey="BPID")]
		public EntitySet<Resver_Throw_Food> Resver_Throw_Food
		{
			get
			{
				return this._Resver_Throw_Food;
			}
			set
			{
				this._Resver_Throw_Food.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_B_Partner", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.B_Partner.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.B_Partner.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(int);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_Partner", Storage="_B_StaticCode", ThisKey="BSCID", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.B_Partner.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.B_Partner.Add(this);
						this._BSCID = value.BSCID;
					}
					else
					{
						this._BSCID = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_B_PartnerItem(B_PartnerItem entity)
		{
			this.SendPropertyChanging();
			entity.B_Partner = this;
		}
		
		private void detach_B_PartnerItem(B_PartnerItem entity)
		{
			this.SendPropertyChanging();
			entity.B_Partner = null;
		}
		
		private void attach_M_Partner_Category(M_Partner_Category entity)
		{
			this.SendPropertyChanging();
			entity.B_Partner = this;
		}
		
		private void detach_M_Partner_Category(M_Partner_Category entity)
		{
			this.SendPropertyChanging();
			entity.B_Partner = null;
		}
		
		private void attach_Resver_Throw_Food(Resver_Throw_Food entity)
		{
			this.SendPropertyChanging();
			entity.B_Partner = this;
		}
		
		private void detach_Resver_Throw_Food(Resver_Throw_Food entity)
		{
			this.SendPropertyChanging();
			entity.B_Partner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_PartnerItem")]
	public partial class B_PartnerItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BPIID;
		
		private int _BPID;
		
		private int _BSCID;
		
		private int _BOCID;
		
		private int _DHID;
		
		private int _Ct;
		
		private int _Price;
		
		private int _UnitPrice;
		
		private int _InPrice;
		
		private int _OutPrice;
		
		private int _SortNo;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<B_OrderCode> _B_OrderCode;
		
		private EntityRef<B_Partner> _B_Partner;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<D_Hall> _D_Hall;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBPIIDChanging(int value);
    partial void OnBPIIDChanged();
    partial void OnBPIDChanging(int value);
    partial void OnBPIDChanged();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnBOCIDChanging(int value);
    partial void OnBOCIDChanged();
    partial void OnDHIDChanging(int value);
    partial void OnDHIDChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnInPriceChanging(int value);
    partial void OnInPriceChanged();
    partial void OnOutPriceChanging(int value);
    partial void OnOutPriceChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public B_PartnerItem()
		{
			this._B_OrderCode = default(EntityRef<B_OrderCode>);
			this._B_Partner = default(EntityRef<B_Partner>);
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._D_Hall = default(EntityRef<D_Hall>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPIID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BPIID
		{
			get
			{
				return this._BPIID;
			}
			set
			{
				if ((this._BPIID != value))
				{
					this.OnBPIIDChanging(value);
					this.SendPropertyChanging();
					this._BPIID = value;
					this.SendPropertyChanged("BPIID");
					this.OnBPIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPID", DbType="Int NOT NULL")]
		public int BPID
		{
			get
			{
				return this._BPID;
			}
			set
			{
				if ((this._BPID != value))
				{
					if (this._B_Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBPIDChanging(value);
					this.SendPropertyChanging();
					this._BPID = value;
					this.SendPropertyChanged("BPID");
					this.OnBPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", DbType="Int NOT NULL")]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOCID", DbType="Int NOT NULL")]
		public int BOCID
		{
			get
			{
				return this._BOCID;
			}
			set
			{
				if ((this._BOCID != value))
				{
					if (this._B_OrderCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOCIDChanging(value);
					this.SendPropertyChanging();
					this._BOCID = value;
					this.SendPropertyChanged("BOCID");
					this.OnBOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHID", DbType="Int NOT NULL")]
		public int DHID
		{
			get
			{
				return this._DHID;
			}
			set
			{
				if ((this._DHID != value))
				{
					if (this._D_Hall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDHIDChanging(value);
					this.SendPropertyChanging();
					this._DHID = value;
					this.SendPropertyChanged("DHID");
					this.OnDHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPrice", DbType="Int NOT NULL")]
		public int InPrice
		{
			get
			{
				return this._InPrice;
			}
			set
			{
				if ((this._InPrice != value))
				{
					this.OnInPriceChanging(value);
					this.SendPropertyChanging();
					this._InPrice = value;
					this.SendPropertyChanged("InPrice");
					this.OnInPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutPrice", DbType="Int NOT NULL")]
		public int OutPrice
		{
			get
			{
				return this._OutPrice;
			}
			set
			{
				if ((this._OutPrice != value))
				{
					this.OnOutPriceChanging(value);
					this.SendPropertyChanging();
					this._OutPrice = value;
					this.SendPropertyChanged("OutPrice");
					this.OnOutPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_OrderCode_B_PartnerItem", Storage="_B_OrderCode", ThisKey="BOCID", OtherKey="BOCID", IsForeignKey=true)]
		public B_OrderCode B_OrderCode
		{
			get
			{
				return this._B_OrderCode.Entity;
			}
			set
			{
				B_OrderCode previousValue = this._B_OrderCode.Entity;
				if (((previousValue != value) 
							|| (this._B_OrderCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_OrderCode.Entity = null;
						previousValue.B_PartnerItem.Remove(this);
					}
					this._B_OrderCode.Entity = value;
					if ((value != null))
					{
						value.B_PartnerItem.Add(this);
						this._BOCID = value.BOCID;
					}
					else
					{
						this._BOCID = default(int);
					}
					this.SendPropertyChanged("B_OrderCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Partner_B_PartnerItem", Storage="_B_Partner", ThisKey="BPID", OtherKey="BPID", IsForeignKey=true)]
		public B_Partner B_Partner
		{
			get
			{
				return this._B_Partner.Entity;
			}
			set
			{
				B_Partner previousValue = this._B_Partner.Entity;
				if (((previousValue != value) 
							|| (this._B_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Partner.Entity = null;
						previousValue.B_PartnerItem.Remove(this);
					}
					this._B_Partner.Entity = value;
					if ((value != null))
					{
						value.B_PartnerItem.Add(this);
						this._BPID = value.BPID;
					}
					else
					{
						this._BPID = default(int);
					}
					this.SendPropertyChanged("B_Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_PartnerItem", Storage="_B_StaticCode", ThisKey="BSCID", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.B_PartnerItem.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.B_PartnerItem.Add(this);
						this._BSCID = value.BSCID;
					}
					else
					{
						this._BSCID = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Hall_B_PartnerItem", Storage="_D_Hall", ThisKey="DHID", OtherKey="DHID", IsForeignKey=true)]
		public D_Hall D_Hall
		{
			get
			{
				return this._D_Hall.Entity;
			}
			set
			{
				D_Hall previousValue = this._D_Hall.Entity;
				if (((previousValue != value) 
							|| (this._D_Hall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_Hall.Entity = null;
						previousValue.B_PartnerItem.Remove(this);
					}
					this._D_Hall.Entity = value;
					if ((value != null))
					{
						value.B_PartnerItem.Add(this);
						this._DHID = value.DHID;
					}
					else
					{
						this._DHID = default(int);
					}
					this.SendPropertyChanged("D_Hall");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_SiteData")]
	public partial class B_SiteData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BSID;
		
		private int _BCID;
		
		private string _Code;
		
		private string _Title;
		
		private int _BasicSize;
		
		private int _MaxSize;
		
		private int _UnitPrice;
		
		private int _InPrice;
		
		private int _OutPrice;
		
		private bool _CubicleFlag;
		
		private int _BSCID1;
		
		private int _BSCID5;
		
		private int _DHID;
		
		private int _BOCID;
		
		private string _PhoneExt1;
		
		private string _PhoneExt2;
		
		private string _PhoneExt3;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Device> _Resver_Device;
		
		private EntitySet<Resver_Other> _Resver_Other;
		
		private EntitySet<Resver_Site> _Resver_Site;
		
		private EntitySet<Resver_Throw> _Resver_Throw;
		
		private EntityRef<B_Category> _B_Category;
		
		private EntityRef<B_OrderCode> _B_OrderCode;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<B_StaticCode> _B_StaticCode1;
		
		private EntityRef<D_Hall> _D_Hall;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBSIDChanging(int value);
    partial void OnBSIDChanged();
    partial void OnBCIDChanging(int value);
    partial void OnBCIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBasicSizeChanging(int value);
    partial void OnBasicSizeChanged();
    partial void OnMaxSizeChanging(int value);
    partial void OnMaxSizeChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnInPriceChanging(int value);
    partial void OnInPriceChanged();
    partial void OnOutPriceChanging(int value);
    partial void OnOutPriceChanged();
    partial void OnCubicleFlagChanging(bool value);
    partial void OnCubicleFlagChanged();
    partial void OnBSCID1Changing(int value);
    partial void OnBSCID1Changed();
    partial void OnBSCID5Changing(int value);
    partial void OnBSCID5Changed();
    partial void OnDHIDChanging(int value);
    partial void OnDHIDChanged();
    partial void OnBOCIDChanging(int value);
    partial void OnBOCIDChanged();
    partial void OnPhoneExt1Changing(string value);
    partial void OnPhoneExt1Changed();
    partial void OnPhoneExt2Changing(string value);
    partial void OnPhoneExt2Changed();
    partial void OnPhoneExt3Changing(string value);
    partial void OnPhoneExt3Changed();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public B_SiteData()
		{
			this._Resver_Device = new EntitySet<Resver_Device>(new Action<Resver_Device>(this.attach_Resver_Device), new Action<Resver_Device>(this.detach_Resver_Device));
			this._Resver_Other = new EntitySet<Resver_Other>(new Action<Resver_Other>(this.attach_Resver_Other), new Action<Resver_Other>(this.detach_Resver_Other));
			this._Resver_Site = new EntitySet<Resver_Site>(new Action<Resver_Site>(this.attach_Resver_Site), new Action<Resver_Site>(this.detach_Resver_Site));
			this._Resver_Throw = new EntitySet<Resver_Throw>(new Action<Resver_Throw>(this.attach_Resver_Throw), new Action<Resver_Throw>(this.detach_Resver_Throw));
			this._B_Category = default(EntityRef<B_Category>);
			this._B_OrderCode = default(EntityRef<B_OrderCode>);
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._B_StaticCode1 = default(EntityRef<B_StaticCode>);
			this._D_Hall = default(EntityRef<D_Hall>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BSID
		{
			get
			{
				return this._BSID;
			}
			set
			{
				if ((this._BSID != value))
				{
					this.OnBSIDChanging(value);
					this.SendPropertyChanging();
					this._BSID = value;
					this.SendPropertyChanged("BSID");
					this.OnBSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int NOT NULL")]
		public int BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicSize", DbType="Int NOT NULL")]
		public int BasicSize
		{
			get
			{
				return this._BasicSize;
			}
			set
			{
				if ((this._BasicSize != value))
				{
					this.OnBasicSizeChanging(value);
					this.SendPropertyChanging();
					this._BasicSize = value;
					this.SendPropertyChanged("BasicSize");
					this.OnBasicSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSize", DbType="Int NOT NULL")]
		public int MaxSize
		{
			get
			{
				return this._MaxSize;
			}
			set
			{
				if ((this._MaxSize != value))
				{
					this.OnMaxSizeChanging(value);
					this.SendPropertyChanging();
					this._MaxSize = value;
					this.SendPropertyChanged("MaxSize");
					this.OnMaxSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPrice", DbType="Int NOT NULL")]
		public int InPrice
		{
			get
			{
				return this._InPrice;
			}
			set
			{
				if ((this._InPrice != value))
				{
					this.OnInPriceChanging(value);
					this.SendPropertyChanging();
					this._InPrice = value;
					this.SendPropertyChanged("InPrice");
					this.OnInPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutPrice", DbType="Int NOT NULL")]
		public int OutPrice
		{
			get
			{
				return this._OutPrice;
			}
			set
			{
				if ((this._OutPrice != value))
				{
					this.OnOutPriceChanging(value);
					this.SendPropertyChanging();
					this._OutPrice = value;
					this.SendPropertyChanged("OutPrice");
					this.OnOutPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CubicleFlag", DbType="Bit NOT NULL")]
		public bool CubicleFlag
		{
			get
			{
				return this._CubicleFlag;
			}
			set
			{
				if ((this._CubicleFlag != value))
				{
					this.OnCubicleFlagChanging(value);
					this.SendPropertyChanging();
					this._CubicleFlag = value;
					this.SendPropertyChanged("CubicleFlag");
					this.OnCubicleFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID1", DbType="Int NOT NULL")]
		public int BSCID1
		{
			get
			{
				return this._BSCID1;
			}
			set
			{
				if ((this._BSCID1 != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCID1Changing(value);
					this.SendPropertyChanging();
					this._BSCID1 = value;
					this.SendPropertyChanged("BSCID1");
					this.OnBSCID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID5", DbType="Int NOT NULL")]
		public int BSCID5
		{
			get
			{
				return this._BSCID5;
			}
			set
			{
				if ((this._BSCID5 != value))
				{
					if (this._B_StaticCode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCID5Changing(value);
					this.SendPropertyChanging();
					this._BSCID5 = value;
					this.SendPropertyChanged("BSCID5");
					this.OnBSCID5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHID", DbType="Int NOT NULL")]
		public int DHID
		{
			get
			{
				return this._DHID;
			}
			set
			{
				if ((this._DHID != value))
				{
					if (this._D_Hall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDHIDChanging(value);
					this.SendPropertyChanging();
					this._DHID = value;
					this.SendPropertyChanged("DHID");
					this.OnDHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOCID", DbType="Int NOT NULL")]
		public int BOCID
		{
			get
			{
				return this._BOCID;
			}
			set
			{
				if ((this._BOCID != value))
				{
					if (this._B_OrderCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBOCIDChanging(value);
					this.SendPropertyChanging();
					this._BOCID = value;
					this.SendPropertyChanged("BOCID");
					this.OnBOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneExt1", DbType="VarChar(6)")]
		public string PhoneExt1
		{
			get
			{
				return this._PhoneExt1;
			}
			set
			{
				if ((this._PhoneExt1 != value))
				{
					this.OnPhoneExt1Changing(value);
					this.SendPropertyChanging();
					this._PhoneExt1 = value;
					this.SendPropertyChanged("PhoneExt1");
					this.OnPhoneExt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneExt2", DbType="VarChar(6)")]
		public string PhoneExt2
		{
			get
			{
				return this._PhoneExt2;
			}
			set
			{
				if ((this._PhoneExt2 != value))
				{
					this.OnPhoneExt2Changing(value);
					this.SendPropertyChanging();
					this._PhoneExt2 = value;
					this.SendPropertyChanged("PhoneExt2");
					this.OnPhoneExt2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneExt3", DbType="VarChar(6)")]
		public string PhoneExt3
		{
			get
			{
				return this._PhoneExt3;
			}
			set
			{
				if ((this._PhoneExt3 != value))
				{
					this.OnPhoneExt3Changing(value);
					this.SendPropertyChanging();
					this._PhoneExt3 = value;
					this.SendPropertyChanged("PhoneExt3");
					this.OnPhoneExt3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_SiteData_Resver_Device", Storage="_Resver_Device", ThisKey="BSID", OtherKey="BSID")]
		public EntitySet<Resver_Device> Resver_Device
		{
			get
			{
				return this._Resver_Device;
			}
			set
			{
				this._Resver_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_SiteData_Resver_Other", Storage="_Resver_Other", ThisKey="BSID", OtherKey="BSID")]
		public EntitySet<Resver_Other> Resver_Other
		{
			get
			{
				return this._Resver_Other;
			}
			set
			{
				this._Resver_Other.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_SiteData_Resver_Site", Storage="_Resver_Site", ThisKey="BSID", OtherKey="BSID")]
		public EntitySet<Resver_Site> Resver_Site
		{
			get
			{
				return this._Resver_Site;
			}
			set
			{
				this._Resver_Site.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_SiteData_Resver_Throw", Storage="_Resver_Throw", ThisKey="BSID", OtherKey="BSID")]
		public EntitySet<Resver_Throw> Resver_Throw
		{
			get
			{
				return this._Resver_Throw;
			}
			set
			{
				this._Resver_Throw.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_B_SiteData", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.B_SiteData.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.B_SiteData.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(int);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_OrderCode_B_SiteData", Storage="_B_OrderCode", ThisKey="BOCID", OtherKey="BOCID", IsForeignKey=true)]
		public B_OrderCode B_OrderCode
		{
			get
			{
				return this._B_OrderCode.Entity;
			}
			set
			{
				B_OrderCode previousValue = this._B_OrderCode.Entity;
				if (((previousValue != value) 
							|| (this._B_OrderCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_OrderCode.Entity = null;
						previousValue.B_SiteData.Remove(this);
					}
					this._B_OrderCode.Entity = value;
					if ((value != null))
					{
						value.B_SiteData.Add(this);
						this._BOCID = value.BOCID;
					}
					else
					{
						this._BOCID = default(int);
					}
					this.SendPropertyChanged("B_OrderCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_SiteData", Storage="_B_StaticCode", ThisKey="BSCID1", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.B_SiteData.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.B_SiteData.Add(this);
						this._BSCID1 = value.BSCID;
					}
					else
					{
						this._BSCID1 = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_SiteData1", Storage="_B_StaticCode1", ThisKey="BSCID5", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode1
		{
			get
			{
				return this._B_StaticCode1.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode1.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode1.Entity = null;
						previousValue.B_SiteData1.Remove(this);
					}
					this._B_StaticCode1.Entity = value;
					if ((value != null))
					{
						value.B_SiteData1.Add(this);
						this._BSCID5 = value.BSCID;
					}
					else
					{
						this._BSCID5 = default(int);
					}
					this.SendPropertyChanged("B_StaticCode1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Hall_B_SiteData", Storage="_D_Hall", ThisKey="DHID", OtherKey="DHID", IsForeignKey=true)]
		public D_Hall D_Hall
		{
			get
			{
				return this._D_Hall.Entity;
			}
			set
			{
				D_Hall previousValue = this._D_Hall.Entity;
				if (((previousValue != value) 
							|| (this._D_Hall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_Hall.Entity = null;
						previousValue.B_SiteData.Remove(this);
					}
					this._D_Hall.Entity = value;
					if ((value != null))
					{
						value.B_SiteData.Add(this);
						this._DHID = value.DHID;
					}
					else
					{
						this._DHID = default(int);
					}
					this.SendPropertyChanged("D_Hall");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Device(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_SiteData = this;
		}
		
		private void detach_Resver_Device(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_SiteData = null;
		}
		
		private void attach_Resver_Other(Resver_Other entity)
		{
			this.SendPropertyChanging();
			entity.B_SiteData = this;
		}
		
		private void detach_Resver_Other(Resver_Other entity)
		{
			this.SendPropertyChanging();
			entity.B_SiteData = null;
		}
		
		private void attach_Resver_Site(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.B_SiteData = this;
		}
		
		private void detach_Resver_Site(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.B_SiteData = null;
		}
		
		private void attach_Resver_Throw(Resver_Throw entity)
		{
			this.SendPropertyChanging();
			entity.B_SiteData = this;
		}
		
		private void detach_Resver_Throw(Resver_Throw entity)
		{
			this.SendPropertyChanging();
			entity.B_SiteData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_StaticCode")]
	public partial class B_StaticCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BSCID;
		
		private int _CodeType;
		
		private string _Code;
		
		private string _Title;
		
		private int _SortNo;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<B_Device> _B_Device;
		
		private EntitySet<B_Partner> _B_Partner;
		
		private EntitySet<B_PartnerItem> _B_PartnerItem;
		
		private EntitySet<B_SiteData> _B_SiteData;
		
		private EntitySet<B_SiteData> _B_SiteData1;
		
		private EntitySet<Customer> _Customer;
		
		private EntitySet<Customer> _Customer1;
		
		private EntitySet<CustomerVisit> _CustomerVisit;
		
		private EntitySet<Resver_Head> _Resver_Head;
		
		private EntitySet<Resver_Head> _Resver_Head1;
		
		private EntitySet<Resver_Site> _Resver_Site;
		
		private EntitySet<Resver_Throw> _Resver_Throw;
		
		private EntitySet<Resver_Throw_Food> _Resver_Throw_Food;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnCodeTypeChanging(int value);
    partial void OnCodeTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public B_StaticCode()
		{
			this._B_Device = new EntitySet<B_Device>(new Action<B_Device>(this.attach_B_Device), new Action<B_Device>(this.detach_B_Device));
			this._B_Partner = new EntitySet<B_Partner>(new Action<B_Partner>(this.attach_B_Partner), new Action<B_Partner>(this.detach_B_Partner));
			this._B_PartnerItem = new EntitySet<B_PartnerItem>(new Action<B_PartnerItem>(this.attach_B_PartnerItem), new Action<B_PartnerItem>(this.detach_B_PartnerItem));
			this._B_SiteData = new EntitySet<B_SiteData>(new Action<B_SiteData>(this.attach_B_SiteData), new Action<B_SiteData>(this.detach_B_SiteData));
			this._B_SiteData1 = new EntitySet<B_SiteData>(new Action<B_SiteData>(this.attach_B_SiteData1), new Action<B_SiteData>(this.detach_B_SiteData1));
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			this._Customer1 = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer1), new Action<Customer>(this.detach_Customer1));
			this._CustomerVisit = new EntitySet<CustomerVisit>(new Action<CustomerVisit>(this.attach_CustomerVisit), new Action<CustomerVisit>(this.detach_CustomerVisit));
			this._Resver_Head = new EntitySet<Resver_Head>(new Action<Resver_Head>(this.attach_Resver_Head), new Action<Resver_Head>(this.detach_Resver_Head));
			this._Resver_Head1 = new EntitySet<Resver_Head>(new Action<Resver_Head>(this.attach_Resver_Head1), new Action<Resver_Head>(this.detach_Resver_Head1));
			this._Resver_Site = new EntitySet<Resver_Site>(new Action<Resver_Site>(this.attach_Resver_Site), new Action<Resver_Site>(this.detach_Resver_Site));
			this._Resver_Throw = new EntitySet<Resver_Throw>(new Action<Resver_Throw>(this.attach_Resver_Throw), new Action<Resver_Throw>(this.detach_Resver_Throw));
			this._Resver_Throw_Food = new EntitySet<Resver_Throw_Food>(new Action<Resver_Throw_Food>(this.attach_Resver_Throw_Food), new Action<Resver_Throw_Food>(this.detach_Resver_Throw_Food));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeType", DbType="Int NOT NULL")]
		public int CodeType
		{
			get
			{
				return this._CodeType;
			}
			set
			{
				if ((this._CodeType != value))
				{
					this.OnCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._CodeType = value;
					this.SendPropertyChanged("CodeType");
					this.OnCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_Device", Storage="_B_Device", ThisKey="BSCID", OtherKey="BSCID")]
		public EntitySet<B_Device> B_Device
		{
			get
			{
				return this._B_Device;
			}
			set
			{
				this._B_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_Partner", Storage="_B_Partner", ThisKey="BSCID", OtherKey="BSCID")]
		public EntitySet<B_Partner> B_Partner
		{
			get
			{
				return this._B_Partner;
			}
			set
			{
				this._B_Partner.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_PartnerItem", Storage="_B_PartnerItem", ThisKey="BSCID", OtherKey="BSCID")]
		public EntitySet<B_PartnerItem> B_PartnerItem
		{
			get
			{
				return this._B_PartnerItem;
			}
			set
			{
				this._B_PartnerItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_SiteData", Storage="_B_SiteData", ThisKey="BSCID", OtherKey="BSCID1")]
		public EntitySet<B_SiteData> B_SiteData
		{
			get
			{
				return this._B_SiteData;
			}
			set
			{
				this._B_SiteData.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_B_SiteData1", Storage="_B_SiteData1", ThisKey="BSCID", OtherKey="BSCID5")]
		public EntitySet<B_SiteData> B_SiteData1
		{
			get
			{
				return this._B_SiteData1;
			}
			set
			{
				this._B_SiteData1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Customer", Storage="_Customer", ThisKey="BSCID", OtherKey="BSCID4")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Customer1", Storage="_Customer1", ThisKey="BSCID", OtherKey="BSCID6")]
		public EntitySet<Customer> Customer1
		{
			get
			{
				return this._Customer1;
			}
			set
			{
				this._Customer1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_CustomerVisit", Storage="_CustomerVisit", ThisKey="BSCID", OtherKey="BSCID")]
		public EntitySet<CustomerVisit> CustomerVisit
		{
			get
			{
				return this._CustomerVisit;
			}
			set
			{
				this._CustomerVisit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Head", Storage="_Resver_Head", ThisKey="BSCID", OtherKey="BSCID11")]
		public EntitySet<Resver_Head> Resver_Head
		{
			get
			{
				return this._Resver_Head;
			}
			set
			{
				this._Resver_Head.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Head1", Storage="_Resver_Head1", ThisKey="BSCID", OtherKey="BSCID12")]
		public EntitySet<Resver_Head> Resver_Head1
		{
			get
			{
				return this._Resver_Head1;
			}
			set
			{
				this._Resver_Head1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Site", Storage="_Resver_Site", ThisKey="BSCID", OtherKey="BSCID")]
		public EntitySet<Resver_Site> Resver_Site
		{
			get
			{
				return this._Resver_Site;
			}
			set
			{
				this._Resver_Site.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Throw", Storage="_Resver_Throw", ThisKey="BSCID", OtherKey="BSCID")]
		public EntitySet<Resver_Throw> Resver_Throw
		{
			get
			{
				return this._Resver_Throw;
			}
			set
			{
				this._Resver_Throw.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Throw_Food", Storage="_Resver_Throw_Food", ThisKey="BSCID", OtherKey="BSCID")]
		public EntitySet<Resver_Throw_Food> Resver_Throw_Food
		{
			get
			{
				return this._Resver_Throw_Food;
			}
			set
			{
				this._Resver_Throw_Food.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_B_Device(B_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_B_Device(B_Device entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_B_Partner(B_Partner entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_B_Partner(B_Partner entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_B_PartnerItem(B_PartnerItem entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_B_PartnerItem(B_PartnerItem entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_B_SiteData(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_B_SiteData(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_B_SiteData1(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode1 = this;
		}
		
		private void detach_B_SiteData1(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode1 = null;
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_Customer1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode1 = this;
		}
		
		private void detach_Customer1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode1 = null;
		}
		
		private void attach_CustomerVisit(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_CustomerVisit(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_Resver_Head(Resver_Head entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_Resver_Head(Resver_Head entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_Resver_Head1(Resver_Head entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode1 = this;
		}
		
		private void detach_Resver_Head1(Resver_Head entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode1 = null;
		}
		
		private void attach_Resver_Site(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_Resver_Site(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_Resver_Throw(Resver_Throw entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_Resver_Throw(Resver_Throw entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
		
		private void attach_Resver_Throw_Food(Resver_Throw_Food entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = this;
		}
		
		private void detach_Resver_Throw_Food(Resver_Throw_Food entity)
		{
			this.SendPropertyChanging();
			entity.B_StaticCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessUser")]
	public partial class BusinessUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BUID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Phone;
		
		private bool _MKsalesFlag;
		
		private bool _OPsalesFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<CustomerVisit> _CustomerVisit;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBUIDChanging(int value);
    partial void OnBUIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMKsalesFlagChanging(bool value);
    partial void OnMKsalesFlagChanged();
    partial void OnOPsalesFlagChanging(bool value);
    partial void OnOPsalesFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public BusinessUser()
		{
			this._CustomerVisit = new EntitySet<CustomerVisit>(new Action<CustomerVisit>(this.attach_CustomerVisit), new Action<CustomerVisit>(this.detach_CustomerVisit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BUID
		{
			get
			{
				return this._BUID;
			}
			set
			{
				if ((this._BUID != value))
				{
					this.OnBUIDChanging(value);
					this.SendPropertyChanging();
					this._BUID = value;
					this.SendPropertyChanged("BUID");
					this.OnBUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MKsalesFlag", DbType="Bit NOT NULL")]
		public bool MKsalesFlag
		{
			get
			{
				return this._MKsalesFlag;
			}
			set
			{
				if ((this._MKsalesFlag != value))
				{
					this.OnMKsalesFlagChanging(value);
					this.SendPropertyChanging();
					this._MKsalesFlag = value;
					this.SendPropertyChanged("MKsalesFlag");
					this.OnMKsalesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPsalesFlag", DbType="Bit NOT NULL")]
		public bool OPsalesFlag
		{
			get
			{
				return this._OPsalesFlag;
			}
			set
			{
				if ((this._OPsalesFlag != value))
				{
					this.OnOPsalesFlagChanging(value);
					this.SendPropertyChanging();
					this._OPsalesFlag = value;
					this.SendPropertyChanged("OPsalesFlag");
					this.OnOPsalesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessUser_CustomerVisit", Storage="_CustomerVisit", ThisKey="BUID", OtherKey="BUID")]
		public EntitySet<CustomerVisit> CustomerVisit
		{
			get
			{
				return this._CustomerVisit;
			}
			set
			{
				this._CustomerVisit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerVisit(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.BusinessUser = this;
		}
		
		private void detach_CustomerVisit(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.BusinessUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private int _BSCID6;
		
		private int _BSCID4;
		
		private string _Code;
		
		private string _Compilation;
		
		private string _TitleC;
		
		private string _TitleE;
		
		private string _Email;
		
		private string _InvoiceTitle;
		
		private string _ContectName;
		
		private string _ContectPhone;
		
		private string _Website;
		
		private string _Note;
		
		private bool _BillFlag;
		
		private bool _InFlag;
		
		private bool _PotentialFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<CustomerGift> _CustomerGift;
		
		private EntitySet<CustomerQuestion> _CustomerQuestion;
		
		private EntitySet<CustomerVisit> _CustomerVisit;
		
		private EntitySet<M_Customer_Category> _M_Customer_Category;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<B_StaticCode> _B_StaticCode1;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnBSCID6Changing(int value);
    partial void OnBSCID6Changed();
    partial void OnBSCID4Changing(int value);
    partial void OnBSCID4Changed();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCompilationChanging(string value);
    partial void OnCompilationChanged();
    partial void OnTitleCChanging(string value);
    partial void OnTitleCChanged();
    partial void OnTitleEChanging(string value);
    partial void OnTitleEChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnInvoiceTitleChanging(string value);
    partial void OnInvoiceTitleChanged();
    partial void OnContectNameChanging(string value);
    partial void OnContectNameChanged();
    partial void OnContectPhoneChanging(string value);
    partial void OnContectPhoneChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnBillFlagChanging(bool value);
    partial void OnBillFlagChanged();
    partial void OnInFlagChanging(bool value);
    partial void OnInFlagChanged();
    partial void OnPotentialFlagChanging(bool value);
    partial void OnPotentialFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Customer()
		{
			this._CustomerGift = new EntitySet<CustomerGift>(new Action<CustomerGift>(this.attach_CustomerGift), new Action<CustomerGift>(this.detach_CustomerGift));
			this._CustomerQuestion = new EntitySet<CustomerQuestion>(new Action<CustomerQuestion>(this.attach_CustomerQuestion), new Action<CustomerQuestion>(this.detach_CustomerQuestion));
			this._CustomerVisit = new EntitySet<CustomerVisit>(new Action<CustomerVisit>(this.attach_CustomerVisit), new Action<CustomerVisit>(this.detach_CustomerVisit));
			this._M_Customer_Category = new EntitySet<M_Customer_Category>(new Action<M_Customer_Category>(this.attach_M_Customer_Category), new Action<M_Customer_Category>(this.detach_M_Customer_Category));
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._B_StaticCode1 = default(EntityRef<B_StaticCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID6", DbType="Int NOT NULL")]
		public int BSCID6
		{
			get
			{
				return this._BSCID6;
			}
			set
			{
				if ((this._BSCID6 != value))
				{
					if (this._B_StaticCode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCID6Changing(value);
					this.SendPropertyChanging();
					this._BSCID6 = value;
					this.SendPropertyChanged("BSCID6");
					this.OnBSCID6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID4", DbType="Int NOT NULL")]
		public int BSCID4
		{
			get
			{
				return this._BSCID4;
			}
			set
			{
				if ((this._BSCID4 != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCID4Changing(value);
					this.SendPropertyChanging();
					this._BSCID4 = value;
					this.SendPropertyChanged("BSCID4");
					this.OnBSCID4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compilation", DbType="VarChar(8)")]
		public string Compilation
		{
			get
			{
				return this._Compilation;
			}
			set
			{
				if ((this._Compilation != value))
				{
					this.OnCompilationChanging(value);
					this.SendPropertyChanging();
					this._Compilation = value;
					this.SendPropertyChanged("Compilation");
					this.OnCompilationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleC", DbType="NVarChar(50)")]
		public string TitleC
		{
			get
			{
				return this._TitleC;
			}
			set
			{
				if ((this._TitleC != value))
				{
					this.OnTitleCChanging(value);
					this.SendPropertyChanging();
					this._TitleC = value;
					this.SendPropertyChanged("TitleC");
					this.OnTitleCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleE", DbType="NVarChar(100)")]
		public string TitleE
		{
			get
			{
				return this._TitleE;
			}
			set
			{
				if ((this._TitleE != value))
				{
					this.OnTitleEChanging(value);
					this.SendPropertyChanging();
					this._TitleE = value;
					this.SendPropertyChanged("TitleE");
					this.OnTitleEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTitle", DbType="NVarChar(50)")]
		public string InvoiceTitle
		{
			get
			{
				return this._InvoiceTitle;
			}
			set
			{
				if ((this._InvoiceTitle != value))
				{
					this.OnInvoiceTitleChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTitle = value;
					this.SendPropertyChanged("InvoiceTitle");
					this.OnInvoiceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContectName", DbType="NVarChar(50)")]
		public string ContectName
		{
			get
			{
				return this._ContectName;
			}
			set
			{
				if ((this._ContectName != value))
				{
					this.OnContectNameChanging(value);
					this.SendPropertyChanging();
					this._ContectName = value;
					this.SendPropertyChanged("ContectName");
					this.OnContectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContectPhone", DbType="NVarChar(50)")]
		public string ContectPhone
		{
			get
			{
				return this._ContectPhone;
			}
			set
			{
				if ((this._ContectPhone != value))
				{
					this.OnContectPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContectPhone = value;
					this.SendPropertyChanged("ContectPhone");
					this.OnContectPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(MAX)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillFlag", DbType="Bit NOT NULL")]
		public bool BillFlag
		{
			get
			{
				return this._BillFlag;
			}
			set
			{
				if ((this._BillFlag != value))
				{
					this.OnBillFlagChanging(value);
					this.SendPropertyChanging();
					this._BillFlag = value;
					this.SendPropertyChanged("BillFlag");
					this.OnBillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InFlag", DbType="Bit NOT NULL")]
		public bool InFlag
		{
			get
			{
				return this._InFlag;
			}
			set
			{
				if ((this._InFlag != value))
				{
					this.OnInFlagChanging(value);
					this.SendPropertyChanging();
					this._InFlag = value;
					this.SendPropertyChanged("InFlag");
					this.OnInFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialFlag", DbType="Bit NOT NULL")]
		public bool PotentialFlag
		{
			get
			{
				return this._PotentialFlag;
			}
			set
			{
				if ((this._PotentialFlag != value))
				{
					this.OnPotentialFlagChanging(value);
					this.SendPropertyChanging();
					this._PotentialFlag = value;
					this.SendPropertyChanged("PotentialFlag");
					this.OnPotentialFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerGift", Storage="_CustomerGift", ThisKey="CID", OtherKey="CID")]
		public EntitySet<CustomerGift> CustomerGift
		{
			get
			{
				return this._CustomerGift;
			}
			set
			{
				this._CustomerGift.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerQuestion", Storage="_CustomerQuestion", ThisKey="CID", OtherKey="CID")]
		public EntitySet<CustomerQuestion> CustomerQuestion
		{
			get
			{
				return this._CustomerQuestion;
			}
			set
			{
				this._CustomerQuestion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerVisit", Storage="_CustomerVisit", ThisKey="CID", OtherKey="CID")]
		public EntitySet<CustomerVisit> CustomerVisit
		{
			get
			{
				return this._CustomerVisit;
			}
			set
			{
				this._CustomerVisit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_M_Customer_Category", Storage="_M_Customer_Category", ThisKey="CID", OtherKey="CID")]
		public EntitySet<M_Customer_Category> M_Customer_Category
		{
			get
			{
				return this._M_Customer_Category;
			}
			set
			{
				this._M_Customer_Category.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Customer", Storage="_B_StaticCode", ThisKey="BSCID4", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._BSCID4 = value.BSCID;
					}
					else
					{
						this._BSCID4 = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Customer1", Storage="_B_StaticCode1", ThisKey="BSCID6", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode1
		{
			get
			{
				return this._B_StaticCode1.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode1.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode1.Entity = null;
						previousValue.Customer1.Remove(this);
					}
					this._B_StaticCode1.Entity = value;
					if ((value != null))
					{
						value.Customer1.Add(this);
						this._BSCID6 = value.BSCID;
					}
					else
					{
						this._BSCID6 = default(int);
					}
					this.SendPropertyChanged("B_StaticCode1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerGift(CustomerGift entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerGift(CustomerGift entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerQuestion(CustomerQuestion entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerQuestion(CustomerQuestion entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerVisit(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerVisit(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_M_Customer_Category(M_Customer_Category entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_M_Customer_Category(M_Customer_Category entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerGift")]
	public partial class CustomerGift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CGID;
		
		private int _CID;
		
		private int _Year;
		
		private System.DateTime _SendDate;
		
		private int _BSCID;
		
		private string _Title;
		
		private int _Ct;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<Customer> _Customer;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCGIDChanging(int value);
    partial void OnCGIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnSendDateChanging(System.DateTime value);
    partial void OnSendDateChanged();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public CustomerGift()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CGID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CGID
		{
			get
			{
				return this._CGID;
			}
			set
			{
				if ((this._CGID != value))
				{
					this.OnCGIDChanging(value);
					this.SendPropertyChanging();
					this._CGID = value;
					this.SendPropertyChanged("CGID");
					this.OnCGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime NOT NULL")]
		public System.DateTime SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", DbType="Int NOT NULL")]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerGift", Storage="_Customer", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerGift.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerGift.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerQuestion")]
	public partial class CustomerQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CQID;
		
		private int _CID;
		
		private System.DateTime _AskDate;
		
		private string _AskTitle;
		
		private string _AskArea;
		
		private string _AskDescription;
		
		private bool _ResponseFlag;
		
		private string _ResponseUser;
		
		private string _ResponseDestriotion;
		
		private System.DateTime _ResponseDate;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<Customer> _Customer;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCQIDChanging(int value);
    partial void OnCQIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnAskDateChanging(System.DateTime value);
    partial void OnAskDateChanged();
    partial void OnAskTitleChanging(string value);
    partial void OnAskTitleChanged();
    partial void OnAskAreaChanging(string value);
    partial void OnAskAreaChanged();
    partial void OnAskDescriptionChanging(string value);
    partial void OnAskDescriptionChanged();
    partial void OnResponseFlagChanging(bool value);
    partial void OnResponseFlagChanged();
    partial void OnResponseUserChanging(string value);
    partial void OnResponseUserChanged();
    partial void OnResponseDestriotionChanging(string value);
    partial void OnResponseDestriotionChanged();
    partial void OnResponseDateChanging(System.DateTime value);
    partial void OnResponseDateChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public CustomerQuestion()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CQID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CQID
		{
			get
			{
				return this._CQID;
			}
			set
			{
				if ((this._CQID != value))
				{
					this.OnCQIDChanging(value);
					this.SendPropertyChanging();
					this._CQID = value;
					this.SendPropertyChanged("CQID");
					this.OnCQIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskDate", DbType="DateTime NOT NULL")]
		public System.DateTime AskDate
		{
			get
			{
				return this._AskDate;
			}
			set
			{
				if ((this._AskDate != value))
				{
					this.OnAskDateChanging(value);
					this.SendPropertyChanging();
					this._AskDate = value;
					this.SendPropertyChanged("AskDate");
					this.OnAskDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskTitle", DbType="NVarChar(100)")]
		public string AskTitle
		{
			get
			{
				return this._AskTitle;
			}
			set
			{
				if ((this._AskTitle != value))
				{
					this.OnAskTitleChanging(value);
					this.SendPropertyChanging();
					this._AskTitle = value;
					this.SendPropertyChanged("AskTitle");
					this.OnAskTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskArea", DbType="NVarChar(100)")]
		public string AskArea
		{
			get
			{
				return this._AskArea;
			}
			set
			{
				if ((this._AskArea != value))
				{
					this.OnAskAreaChanging(value);
					this.SendPropertyChanging();
					this._AskArea = value;
					this.SendPropertyChanged("AskArea");
					this.OnAskAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskDescription", DbType="NVarChar(MAX)")]
		public string AskDescription
		{
			get
			{
				return this._AskDescription;
			}
			set
			{
				if ((this._AskDescription != value))
				{
					this.OnAskDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AskDescription = value;
					this.SendPropertyChanged("AskDescription");
					this.OnAskDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseFlag", DbType="Bit NOT NULL")]
		public bool ResponseFlag
		{
			get
			{
				return this._ResponseFlag;
			}
			set
			{
				if ((this._ResponseFlag != value))
				{
					this.OnResponseFlagChanging(value);
					this.SendPropertyChanging();
					this._ResponseFlag = value;
					this.SendPropertyChanged("ResponseFlag");
					this.OnResponseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseUser", DbType="NVarChar(100)")]
		public string ResponseUser
		{
			get
			{
				return this._ResponseUser;
			}
			set
			{
				if ((this._ResponseUser != value))
				{
					this.OnResponseUserChanging(value);
					this.SendPropertyChanging();
					this._ResponseUser = value;
					this.SendPropertyChanged("ResponseUser");
					this.OnResponseUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseDestriotion", DbType="NVarChar(MAX)")]
		public string ResponseDestriotion
		{
			get
			{
				return this._ResponseDestriotion;
			}
			set
			{
				if ((this._ResponseDestriotion != value))
				{
					this.OnResponseDestriotionChanging(value);
					this.SendPropertyChanging();
					this._ResponseDestriotion = value;
					this.SendPropertyChanged("ResponseDestriotion");
					this.OnResponseDestriotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResponseDate
		{
			get
			{
				return this._ResponseDate;
			}
			set
			{
				if ((this._ResponseDate != value))
				{
					this.OnResponseDateChanging(value);
					this.SendPropertyChanging();
					this._ResponseDate = value;
					this.SendPropertyChanged("ResponseDate");
					this.OnResponseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerQuestion", Storage="_Customer", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerQuestion.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerQuestion.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerVisit")]
	public partial class CustomerVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CVID;
		
		private int _CID;
		
		private int _BSCID;
		
		private int _BUID;
		
		private string _TargetTitle;
		
		private System.DateTime _VisitDate;
		
		private string _Title;
		
		private string _Description;
		
		private string _AfterNote;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<BusinessUser> _BusinessUser;
		
		private EntityRef<Customer> _Customer;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCVIDChanging(int value);
    partial void OnCVIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnBUIDChanging(int value);
    partial void OnBUIDChanged();
    partial void OnTargetTitleChanging(string value);
    partial void OnTargetTitleChanged();
    partial void OnVisitDateChanging(System.DateTime value);
    partial void OnVisitDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAfterNoteChanging(string value);
    partial void OnAfterNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public CustomerVisit()
		{
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._BusinessUser = default(EntityRef<BusinessUser>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CVID
		{
			get
			{
				return this._CVID;
			}
			set
			{
				if ((this._CVID != value))
				{
					this.OnCVIDChanging(value);
					this.SendPropertyChanging();
					this._CVID = value;
					this.SendPropertyChanged("CVID");
					this.OnCVIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", DbType="Int NOT NULL")]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUID", DbType="Int NOT NULL")]
		public int BUID
		{
			get
			{
				return this._BUID;
			}
			set
			{
				if ((this._BUID != value))
				{
					if (this._BusinessUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBUIDChanging(value);
					this.SendPropertyChanging();
					this._BUID = value;
					this.SendPropertyChanged("BUID");
					this.OnBUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetTitle", DbType="NVarChar(100)")]
		public string TargetTitle
		{
			get
			{
				return this._TargetTitle;
			}
			set
			{
				if ((this._TargetTitle != value))
				{
					this.OnTargetTitleChanging(value);
					this.SendPropertyChanging();
					this._TargetTitle = value;
					this.SendPropertyChanged("TargetTitle");
					this.OnTargetTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="DateTime NOT NULL")]
		public System.DateTime VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this.OnVisitDateChanging(value);
					this.SendPropertyChanging();
					this._VisitDate = value;
					this.SendPropertyChanged("VisitDate");
					this.OnVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterNote", DbType="NVarChar(MAX)")]
		public string AfterNote
		{
			get
			{
				return this._AfterNote;
			}
			set
			{
				if ((this._AfterNote != value))
				{
					this.OnAfterNoteChanging(value);
					this.SendPropertyChanging();
					this._AfterNote = value;
					this.SendPropertyChanged("AfterNote");
					this.OnAfterNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_CustomerVisit", Storage="_B_StaticCode", ThisKey="BSCID", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.CustomerVisit.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.CustomerVisit.Add(this);
						this._BSCID = value.BSCID;
					}
					else
					{
						this._BSCID = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessUser_CustomerVisit", Storage="_BusinessUser", ThisKey="BUID", OtherKey="BUID", IsForeignKey=true)]
		public BusinessUser BusinessUser
		{
			get
			{
				return this._BusinessUser.Entity;
			}
			set
			{
				BusinessUser previousValue = this._BusinessUser.Entity;
				if (((previousValue != value) 
							|| (this._BusinessUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessUser.Entity = null;
						previousValue.CustomerVisit.Remove(this);
					}
					this._BusinessUser.Entity = value;
					if ((value != null))
					{
						value.CustomerVisit.Add(this);
						this._BUID = value.BUID;
					}
					else
					{
						this._BUID = default(int);
					}
					this.SendPropertyChanged("BusinessUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerVisit", Storage="_Customer", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerVisit.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerVisit.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.D_Company")]
	public partial class D_Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DCID;
		
		private int _BCID;
		
		private string _Code;
		
		private string _TitleC;
		
		private string _TitleE;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<D_Department> _D_Department;
		
		private EntityRef<B_Category> _B_Category;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDCIDChanging(int value);
    partial void OnDCIDChanged();
    partial void OnBCIDChanging(int value);
    partial void OnBCIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleCChanging(string value);
    partial void OnTitleCChanged();
    partial void OnTitleEChanging(string value);
    partial void OnTitleEChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public D_Company()
		{
			this._D_Department = new EntitySet<D_Department>(new Action<D_Department>(this.attach_D_Department), new Action<D_Department>(this.detach_D_Department));
			this._B_Category = default(EntityRef<B_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DCID
		{
			get
			{
				return this._DCID;
			}
			set
			{
				if ((this._DCID != value))
				{
					this.OnDCIDChanging(value);
					this.SendPropertyChanging();
					this._DCID = value;
					this.SendPropertyChanged("DCID");
					this.OnDCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int NOT NULL")]
		public int BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleC", DbType="NVarChar(50)")]
		public string TitleC
		{
			get
			{
				return this._TitleC;
			}
			set
			{
				if ((this._TitleC != value))
				{
					this.OnTitleCChanging(value);
					this.SendPropertyChanging();
					this._TitleC = value;
					this.SendPropertyChanged("TitleC");
					this.OnTitleCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleE", DbType="NVarChar(50)")]
		public string TitleE
		{
			get
			{
				return this._TitleE;
			}
			set
			{
				if ((this._TitleE != value))
				{
					this.OnTitleEChanging(value);
					this.SendPropertyChanging();
					this._TitleE = value;
					this.SendPropertyChanged("TitleE");
					this.OnTitleEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Company_D_Department", Storage="_D_Department", ThisKey="DCID", OtherKey="DCID")]
		public EntitySet<D_Department> D_Department
		{
			get
			{
				return this._D_Department;
			}
			set
			{
				this._D_Department.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_D_Company", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.D_Company.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.D_Company.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(int);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_D_Department(D_Department entity)
		{
			this.SendPropertyChanging();
			entity.D_Company = this;
		}
		
		private void detach_D_Department(D_Department entity)
		{
			this.SendPropertyChanging();
			entity.D_Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.D_Department")]
	public partial class D_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DDID;
		
		private int _DCID;
		
		private string _Code;
		
		private string _TitleC;
		
		private string _TitleE;
		
		private int _PeopleCt;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<D_Hall> _D_Hall;
		
		private EntitySet<M_Department_Category> _M_Department_Category;
		
		private EntityRef<D_Company> _D_Company;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDDIDChanging(int value);
    partial void OnDDIDChanged();
    partial void OnDCIDChanging(int value);
    partial void OnDCIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleCChanging(string value);
    partial void OnTitleCChanged();
    partial void OnTitleEChanging(string value);
    partial void OnTitleEChanged();
    partial void OnPeopleCtChanging(int value);
    partial void OnPeopleCtChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public D_Department()
		{
			this._D_Hall = new EntitySet<D_Hall>(new Action<D_Hall>(this.attach_D_Hall), new Action<D_Hall>(this.detach_D_Hall));
			this._M_Department_Category = new EntitySet<M_Department_Category>(new Action<M_Department_Category>(this.attach_M_Department_Category), new Action<M_Department_Category>(this.detach_M_Department_Category));
			this._D_Company = default(EntityRef<D_Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DDID
		{
			get
			{
				return this._DDID;
			}
			set
			{
				if ((this._DDID != value))
				{
					this.OnDDIDChanging(value);
					this.SendPropertyChanging();
					this._DDID = value;
					this.SendPropertyChanged("DDID");
					this.OnDDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCID", DbType="Int NOT NULL")]
		public int DCID
		{
			get
			{
				return this._DCID;
			}
			set
			{
				if ((this._DCID != value))
				{
					if (this._D_Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDCIDChanging(value);
					this.SendPropertyChanging();
					this._DCID = value;
					this.SendPropertyChanged("DCID");
					this.OnDCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleC", DbType="NVarChar(50)")]
		public string TitleC
		{
			get
			{
				return this._TitleC;
			}
			set
			{
				if ((this._TitleC != value))
				{
					this.OnTitleCChanging(value);
					this.SendPropertyChanging();
					this._TitleC = value;
					this.SendPropertyChanged("TitleC");
					this.OnTitleCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleE", DbType="NVarChar(50)")]
		public string TitleE
		{
			get
			{
				return this._TitleE;
			}
			set
			{
				if ((this._TitleE != value))
				{
					this.OnTitleEChanging(value);
					this.SendPropertyChanging();
					this._TitleE = value;
					this.SendPropertyChanged("TitleE");
					this.OnTitleEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeopleCt", DbType="Int NOT NULL")]
		public int PeopleCt
		{
			get
			{
				return this._PeopleCt;
			}
			set
			{
				if ((this._PeopleCt != value))
				{
					this.OnPeopleCtChanging(value);
					this.SendPropertyChanging();
					this._PeopleCt = value;
					this.SendPropertyChanged("PeopleCt");
					this.OnPeopleCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Department_D_Hall", Storage="_D_Hall", ThisKey="DDID", OtherKey="DDID")]
		public EntitySet<D_Hall> D_Hall
		{
			get
			{
				return this._D_Hall;
			}
			set
			{
				this._D_Hall.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Department_M_Department_Category", Storage="_M_Department_Category", ThisKey="DDID", OtherKey="DDID")]
		public EntitySet<M_Department_Category> M_Department_Category
		{
			get
			{
				return this._M_Department_Category;
			}
			set
			{
				this._M_Department_Category.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Company_D_Department", Storage="_D_Company", ThisKey="DCID", OtherKey="DCID", IsForeignKey=true)]
		public D_Company D_Company
		{
			get
			{
				return this._D_Company.Entity;
			}
			set
			{
				D_Company previousValue = this._D_Company.Entity;
				if (((previousValue != value) 
							|| (this._D_Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_Company.Entity = null;
						previousValue.D_Department.Remove(this);
					}
					this._D_Company.Entity = value;
					if ((value != null))
					{
						value.D_Department.Add(this);
						this._DCID = value.DCID;
					}
					else
					{
						this._DCID = default(int);
					}
					this.SendPropertyChanged("D_Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_D_Hall(D_Hall entity)
		{
			this.SendPropertyChanging();
			entity.D_Department = this;
		}
		
		private void detach_D_Hall(D_Hall entity)
		{
			this.SendPropertyChanging();
			entity.D_Department = null;
		}
		
		private void attach_M_Department_Category(M_Department_Category entity)
		{
			this.SendPropertyChanging();
			entity.D_Department = this;
		}
		
		private void detach_M_Department_Category(M_Department_Category entity)
		{
			this.SendPropertyChanging();
			entity.D_Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.D_FoodCategory")]
	public partial class D_FoodCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DFCID;
		
		private string _Code;
		
		private string _Title;
		
		private int _UnitPrice;
		
		private int _Price;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Throw_Food> _Resver_Throw_Food;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDFCIDChanging(int value);
    partial void OnDFCIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public D_FoodCategory()
		{
			this._Resver_Throw_Food = new EntitySet<Resver_Throw_Food>(new Action<Resver_Throw_Food>(this.attach_Resver_Throw_Food), new Action<Resver_Throw_Food>(this.detach_Resver_Throw_Food));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DFCID
		{
			get
			{
				return this._DFCID;
			}
			set
			{
				if ((this._DFCID != value))
				{
					this.OnDFCIDChanging(value);
					this.SendPropertyChanging();
					this._DFCID = value;
					this.SendPropertyChanged("DFCID");
					this.OnDFCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_FoodCategory_Resver_Throw_Food", Storage="_Resver_Throw_Food", ThisKey="DFCID", OtherKey="DFCID")]
		public EntitySet<Resver_Throw_Food> Resver_Throw_Food
		{
			get
			{
				return this._Resver_Throw_Food;
			}
			set
			{
				this._Resver_Throw_Food.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Throw_Food(Resver_Throw_Food entity)
		{
			this.SendPropertyChanging();
			entity.D_FoodCategory = this;
		}
		
		private void detach_Resver_Throw_Food(Resver_Throw_Food entity)
		{
			this.SendPropertyChanging();
			entity.D_FoodCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.D_Hall")]
	public partial class D_Hall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DHID;
		
		private string _Code;
		
		private string _TitleC;
		
		private string _TitleE;
		
		private int _DDID;
		
		private bool _DiscountFlag;
		
		private bool _CheckoutNowFlag;
		
		private bool _PrintCheckFlag;
		
		private bool _Invoice3Flag;
		
		private int _CheckType;
		
		private double _BusinessTaxRate;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<B_Device> _B_Device;
		
		private EntitySet<B_PartnerItem> _B_PartnerItem;
		
		private EntitySet<B_SiteData> _B_SiteData;
		
		private EntityRef<D_Department> _D_Department;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDHIDChanging(int value);
    partial void OnDHIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleCChanging(string value);
    partial void OnTitleCChanged();
    partial void OnTitleEChanging(string value);
    partial void OnTitleEChanged();
    partial void OnDDIDChanging(int value);
    partial void OnDDIDChanged();
    partial void OnDiscountFlagChanging(bool value);
    partial void OnDiscountFlagChanged();
    partial void OnCheckoutNowFlagChanging(bool value);
    partial void OnCheckoutNowFlagChanged();
    partial void OnPrintCheckFlagChanging(bool value);
    partial void OnPrintCheckFlagChanged();
    partial void OnInvoice3FlagChanging(bool value);
    partial void OnInvoice3FlagChanged();
    partial void OnCheckTypeChanging(int value);
    partial void OnCheckTypeChanged();
    partial void OnBusinessTaxRateChanging(double value);
    partial void OnBusinessTaxRateChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public D_Hall()
		{
			this._B_Device = new EntitySet<B_Device>(new Action<B_Device>(this.attach_B_Device), new Action<B_Device>(this.detach_B_Device));
			this._B_PartnerItem = new EntitySet<B_PartnerItem>(new Action<B_PartnerItem>(this.attach_B_PartnerItem), new Action<B_PartnerItem>(this.detach_B_PartnerItem));
			this._B_SiteData = new EntitySet<B_SiteData>(new Action<B_SiteData>(this.attach_B_SiteData), new Action<B_SiteData>(this.detach_B_SiteData));
			this._D_Department = default(EntityRef<D_Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DHID
		{
			get
			{
				return this._DHID;
			}
			set
			{
				if ((this._DHID != value))
				{
					this.OnDHIDChanging(value);
					this.SendPropertyChanging();
					this._DHID = value;
					this.SendPropertyChanged("DHID");
					this.OnDHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleC", DbType="NVarChar(50)")]
		public string TitleC
		{
			get
			{
				return this._TitleC;
			}
			set
			{
				if ((this._TitleC != value))
				{
					this.OnTitleCChanging(value);
					this.SendPropertyChanging();
					this._TitleC = value;
					this.SendPropertyChanged("TitleC");
					this.OnTitleCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleE", DbType="NVarChar(50)")]
		public string TitleE
		{
			get
			{
				return this._TitleE;
			}
			set
			{
				if ((this._TitleE != value))
				{
					this.OnTitleEChanging(value);
					this.SendPropertyChanging();
					this._TitleE = value;
					this.SendPropertyChanged("TitleE");
					this.OnTitleEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDID", DbType="Int NOT NULL")]
		public int DDID
		{
			get
			{
				return this._DDID;
			}
			set
			{
				if ((this._DDID != value))
				{
					if (this._D_Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDIDChanging(value);
					this.SendPropertyChanging();
					this._DDID = value;
					this.SendPropertyChanged("DDID");
					this.OnDDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountFlag", DbType="Bit NOT NULL")]
		public bool DiscountFlag
		{
			get
			{
				return this._DiscountFlag;
			}
			set
			{
				if ((this._DiscountFlag != value))
				{
					this.OnDiscountFlagChanging(value);
					this.SendPropertyChanging();
					this._DiscountFlag = value;
					this.SendPropertyChanged("DiscountFlag");
					this.OnDiscountFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckoutNowFlag", DbType="Bit NOT NULL")]
		public bool CheckoutNowFlag
		{
			get
			{
				return this._CheckoutNowFlag;
			}
			set
			{
				if ((this._CheckoutNowFlag != value))
				{
					this.OnCheckoutNowFlagChanging(value);
					this.SendPropertyChanging();
					this._CheckoutNowFlag = value;
					this.SendPropertyChanged("CheckoutNowFlag");
					this.OnCheckoutNowFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintCheckFlag", DbType="Bit NOT NULL")]
		public bool PrintCheckFlag
		{
			get
			{
				return this._PrintCheckFlag;
			}
			set
			{
				if ((this._PrintCheckFlag != value))
				{
					this.OnPrintCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintCheckFlag = value;
					this.SendPropertyChanged("PrintCheckFlag");
					this.OnPrintCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice3Flag", DbType="Bit NOT NULL")]
		public bool Invoice3Flag
		{
			get
			{
				return this._Invoice3Flag;
			}
			set
			{
				if ((this._Invoice3Flag != value))
				{
					this.OnInvoice3FlagChanging(value);
					this.SendPropertyChanging();
					this._Invoice3Flag = value;
					this.SendPropertyChanged("Invoice3Flag");
					this.OnInvoice3FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckType", DbType="Int NOT NULL")]
		public int CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this.OnCheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckType = value;
					this.SendPropertyChanged("CheckType");
					this.OnCheckTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTaxRate", DbType="Float NOT NULL")]
		public double BusinessTaxRate
		{
			get
			{
				return this._BusinessTaxRate;
			}
			set
			{
				if ((this._BusinessTaxRate != value))
				{
					this.OnBusinessTaxRateChanging(value);
					this.SendPropertyChanging();
					this._BusinessTaxRate = value;
					this.SendPropertyChanged("BusinessTaxRate");
					this.OnBusinessTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Hall_B_Device", Storage="_B_Device", ThisKey="DHID", OtherKey="DHID")]
		public EntitySet<B_Device> B_Device
		{
			get
			{
				return this._B_Device;
			}
			set
			{
				this._B_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Hall_B_PartnerItem", Storage="_B_PartnerItem", ThisKey="DHID", OtherKey="DHID")]
		public EntitySet<B_PartnerItem> B_PartnerItem
		{
			get
			{
				return this._B_PartnerItem;
			}
			set
			{
				this._B_PartnerItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Hall_B_SiteData", Storage="_B_SiteData", ThisKey="DHID", OtherKey="DHID")]
		public EntitySet<B_SiteData> B_SiteData
		{
			get
			{
				return this._B_SiteData;
			}
			set
			{
				this._B_SiteData.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Department_D_Hall", Storage="_D_Department", ThisKey="DDID", OtherKey="DDID", IsForeignKey=true)]
		public D_Department D_Department
		{
			get
			{
				return this._D_Department.Entity;
			}
			set
			{
				D_Department previousValue = this._D_Department.Entity;
				if (((previousValue != value) 
							|| (this._D_Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_Department.Entity = null;
						previousValue.D_Hall.Remove(this);
					}
					this._D_Department.Entity = value;
					if ((value != null))
					{
						value.D_Hall.Add(this);
						this._DDID = value.DDID;
					}
					else
					{
						this._DDID = default(int);
					}
					this.SendPropertyChanged("D_Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_B_Device(B_Device entity)
		{
			this.SendPropertyChanging();
			entity.D_Hall = this;
		}
		
		private void detach_B_Device(B_Device entity)
		{
			this.SendPropertyChanging();
			entity.D_Hall = null;
		}
		
		private void attach_B_PartnerItem(B_PartnerItem entity)
		{
			this.SendPropertyChanging();
			entity.D_Hall = this;
		}
		
		private void detach_B_PartnerItem(B_PartnerItem entity)
		{
			this.SendPropertyChanging();
			entity.D_Hall = null;
		}
		
		private void attach_B_SiteData(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.D_Hall = this;
		}
		
		private void detach_B_SiteData(B_SiteData entity)
		{
			this.SendPropertyChanging();
			entity.D_Hall = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.D_OtherPayItem")]
	public partial class D_OtherPayItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DOPIID;
		
		private string _Code;
		
		private string _Title;
		
		private int _Ct;
		
		private int _UnitPrice;
		
		private int _InPrice;
		
		private int _OutPrice;
		
		private int _PaidType;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Other> _Resver_Other;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDOPIIDChanging(int value);
    partial void OnDOPIIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnInPriceChanging(int value);
    partial void OnInPriceChanged();
    partial void OnOutPriceChanging(int value);
    partial void OnOutPriceChanged();
    partial void OnPaidTypeChanging(int value);
    partial void OnPaidTypeChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public D_OtherPayItem()
		{
			this._Resver_Other = new EntitySet<Resver_Other>(new Action<Resver_Other>(this.attach_Resver_Other), new Action<Resver_Other>(this.detach_Resver_Other));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOPIID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DOPIID
		{
			get
			{
				return this._DOPIID;
			}
			set
			{
				if ((this._DOPIID != value))
				{
					this.OnDOPIIDChanging(value);
					this.SendPropertyChanging();
					this._DOPIID = value;
					this.SendPropertyChanged("DOPIID");
					this.OnDOPIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPrice", DbType="Int NOT NULL")]
		public int InPrice
		{
			get
			{
				return this._InPrice;
			}
			set
			{
				if ((this._InPrice != value))
				{
					this.OnInPriceChanging(value);
					this.SendPropertyChanging();
					this._InPrice = value;
					this.SendPropertyChanged("InPrice");
					this.OnInPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutPrice", DbType="Int NOT NULL")]
		public int OutPrice
		{
			get
			{
				return this._OutPrice;
			}
			set
			{
				if ((this._OutPrice != value))
				{
					this.OnOutPriceChanging(value);
					this.SendPropertyChanging();
					this._OutPrice = value;
					this.SendPropertyChanged("OutPrice");
					this.OnOutPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidType", DbType="Int NOT NULL")]
		public int PaidType
		{
			get
			{
				return this._PaidType;
			}
			set
			{
				if ((this._PaidType != value))
				{
					this.OnPaidTypeChanging(value);
					this.SendPropertyChanging();
					this._PaidType = value;
					this.SendPropertyChanged("PaidType");
					this.OnPaidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_OtherPayItem_Resver_Other", Storage="_Resver_Other", ThisKey="DOPIID", OtherKey="DOPIID")]
		public EntitySet<Resver_Other> Resver_Other
		{
			get
			{
				return this._Resver_Other;
			}
			set
			{
				this._Resver_Other.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Other(Resver_Other entity)
		{
			this.SendPropertyChanging();
			entity.D_OtherPayItem = this;
		}
		
		private void detach_Resver_Other(Resver_Other entity)
		{
			this.SendPropertyChanging();
			entity.D_OtherPayItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.D_TimeSpan")]
	public partial class D_TimeSpan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DTSID;
		
		private string _Code;
		
		private string _Title;
		
		private int _HourS;
		
		private int _MinuteS;
		
		private int _HourE;
		
		private int _MinuteE;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Device> _Resver_Device;
		
		private EntitySet<Resver_Device> _Resver_Device1;
		
		private EntitySet<Resver_Site> _Resver_Site;
		
		private EntitySet<Resver_Site> _Resver_Site1;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDTSIDChanging(int value);
    partial void OnDTSIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHourSChanging(int value);
    partial void OnHourSChanged();
    partial void OnMinuteSChanging(int value);
    partial void OnMinuteSChanged();
    partial void OnHourEChanging(int value);
    partial void OnHourEChanged();
    partial void OnMinuteEChanging(int value);
    partial void OnMinuteEChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public D_TimeSpan()
		{
			this._Resver_Device = new EntitySet<Resver_Device>(new Action<Resver_Device>(this.attach_Resver_Device), new Action<Resver_Device>(this.detach_Resver_Device));
			this._Resver_Device1 = new EntitySet<Resver_Device>(new Action<Resver_Device>(this.attach_Resver_Device1), new Action<Resver_Device>(this.detach_Resver_Device1));
			this._Resver_Site = new EntitySet<Resver_Site>(new Action<Resver_Site>(this.attach_Resver_Site), new Action<Resver_Site>(this.detach_Resver_Site));
			this._Resver_Site1 = new EntitySet<Resver_Site>(new Action<Resver_Site>(this.attach_Resver_Site1), new Action<Resver_Site>(this.detach_Resver_Site1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DTSID
		{
			get
			{
				return this._DTSID;
			}
			set
			{
				if ((this._DTSID != value))
				{
					this.OnDTSIDChanging(value);
					this.SendPropertyChanging();
					this._DTSID = value;
					this.SendPropertyChanged("DTSID");
					this.OnDTSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourS", DbType="Int NOT NULL")]
		public int HourS
		{
			get
			{
				return this._HourS;
			}
			set
			{
				if ((this._HourS != value))
				{
					this.OnHourSChanging(value);
					this.SendPropertyChanging();
					this._HourS = value;
					this.SendPropertyChanged("HourS");
					this.OnHourSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinuteS", DbType="Int NOT NULL")]
		public int MinuteS
		{
			get
			{
				return this._MinuteS;
			}
			set
			{
				if ((this._MinuteS != value))
				{
					this.OnMinuteSChanging(value);
					this.SendPropertyChanging();
					this._MinuteS = value;
					this.SendPropertyChanged("MinuteS");
					this.OnMinuteSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourE", DbType="Int NOT NULL")]
		public int HourE
		{
			get
			{
				return this._HourE;
			}
			set
			{
				if ((this._HourE != value))
				{
					this.OnHourEChanging(value);
					this.SendPropertyChanging();
					this._HourE = value;
					this.SendPropertyChanged("HourE");
					this.OnHourEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinuteE", DbType="Int NOT NULL")]
		public int MinuteE
		{
			get
			{
				return this._MinuteE;
			}
			set
			{
				if ((this._MinuteE != value))
				{
					this.OnMinuteEChanging(value);
					this.SendPropertyChanging();
					this._MinuteE = value;
					this.SendPropertyChanged("MinuteE");
					this.OnMinuteEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_TimeSpan_Resver_Device", Storage="_Resver_Device", ThisKey="DTSID", OtherKey="DTSIDE")]
		public EntitySet<Resver_Device> Resver_Device
		{
			get
			{
				return this._Resver_Device;
			}
			set
			{
				this._Resver_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_TimeSpan_Resver_Device1", Storage="_Resver_Device1", ThisKey="DTSID", OtherKey="DTSIDS")]
		public EntitySet<Resver_Device> Resver_Device1
		{
			get
			{
				return this._Resver_Device1;
			}
			set
			{
				this._Resver_Device1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_TimeSpan_Resver_Site", Storage="_Resver_Site", ThisKey="DTSID", OtherKey="DTSIDE")]
		public EntitySet<Resver_Site> Resver_Site
		{
			get
			{
				return this._Resver_Site;
			}
			set
			{
				this._Resver_Site.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_TimeSpan_Resver_Site1", Storage="_Resver_Site1", ThisKey="DTSID", OtherKey="DTSIDS")]
		public EntitySet<Resver_Site> Resver_Site1
		{
			get
			{
				return this._Resver_Site1;
			}
			set
			{
				this._Resver_Site1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Device(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.D_TimeSpan = this;
		}
		
		private void detach_Resver_Device(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.D_TimeSpan = null;
		}
		
		private void attach_Resver_Device1(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.D_TimeSpan1 = this;
		}
		
		private void detach_Resver_Device1(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.D_TimeSpan1 = null;
		}
		
		private void attach_Resver_Site(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.D_TimeSpan = this;
		}
		
		private void detach_Resver_Site(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.D_TimeSpan = null;
		}
		
		private void attach_Resver_Site1(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.D_TimeSpan1 = this;
		}
		
		private void detach_Resver_Site1(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.D_TimeSpan1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.D_Zip")]
	public partial class D_Zip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DZID;
		
		private int _ParentID;
		
		private string _Code;
		
		private string _Title;
		
		private string _GroupName;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDZIDChanging(int value);
    partial void OnDZIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public D_Zip()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DZID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DZID
		{
			get
			{
				return this._DZID;
			}
			set
			{
				if ((this._DZID != value))
				{
					this.OnDZIDChanging(value);
					this.SendPropertyChanging();
					this._DZID = value;
					this.SendPropertyChanged("DZID");
					this.OnDZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupData")]
	public partial class GroupData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GID;
		
		private string _Title;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<M_Group_Menu> _M_Group_Menu;
		
		private EntitySet<M_Group_User> _M_Group_User;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGIDChanging(int value);
    partial void OnGIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public GroupData()
		{
			this._M_Group_Menu = new EntitySet<M_Group_Menu>(new Action<M_Group_Menu>(this.attach_M_Group_Menu), new Action<M_Group_Menu>(this.detach_M_Group_Menu));
			this._M_Group_User = new EntitySet<M_Group_User>(new Action<M_Group_User>(this.attach_M_Group_User), new Action<M_Group_User>(this.detach_M_Group_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GID
		{
			get
			{
				return this._GID;
			}
			set
			{
				if ((this._GID != value))
				{
					this.OnGIDChanging(value);
					this.SendPropertyChanging();
					this._GID = value;
					this.SendPropertyChanged("GID");
					this.OnGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupData_M_Group_Menu", Storage="_M_Group_Menu", ThisKey="GID", OtherKey="GID")]
		public EntitySet<M_Group_Menu> M_Group_Menu
		{
			get
			{
				return this._M_Group_Menu;
			}
			set
			{
				this._M_Group_Menu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupData_M_Group_User", Storage="_M_Group_User", ThisKey="GID", OtherKey="GID")]
		public EntitySet<M_Group_User> M_Group_User
		{
			get
			{
				return this._M_Group_User;
			}
			set
			{
				this._M_Group_User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_Group_Menu(M_Group_Menu entity)
		{
			this.SendPropertyChanging();
			entity.GroupData = this;
		}
		
		private void detach_M_Group_Menu(M_Group_Menu entity)
		{
			this.SendPropertyChanging();
			entity.GroupData = null;
		}
		
		private void attach_M_Group_User(M_Group_User entity)
		{
			this.SendPropertyChanging();
			entity.GroupData = this;
		}
		
		private void detach_M_Group_User(M_Group_User entity)
		{
			this.SendPropertyChanging();
			entity.GroupData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Customer_Category")]
	public partial class M_Customer_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private System.Nullable<int> _CID;
		
		private System.Nullable<int> _BCID;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<B_Category> _B_Category;
		
		private EntityRef<Customer> _Customer;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnCIDChanging(System.Nullable<int> value);
    partial void OnCIDChanged();
    partial void OnBCIDChanging(System.Nullable<int> value);
    partial void OnBCIDChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public M_Customer_Category()
		{
			this._B_Category = default(EntityRef<B_Category>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int")]
		public System.Nullable<int> CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int")]
		public System.Nullable<int> BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_M_Customer_Category", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.M_Customer_Category.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.M_Customer_Category.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(Nullable<int>);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_M_Customer_Category", Storage="_Customer", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.M_Customer_Category.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.M_Customer_Category.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Department_Category")]
	public partial class M_Department_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private System.Nullable<int> _DDID;
		
		private System.Nullable<int> _BCID;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<B_Category> _B_Category;
		
		private EntityRef<D_Department> _D_Department;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnDDIDChanging(System.Nullable<int> value);
    partial void OnDDIDChanged();
    partial void OnBCIDChanging(System.Nullable<int> value);
    partial void OnBCIDChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public M_Department_Category()
		{
			this._B_Category = default(EntityRef<B_Category>);
			this._D_Department = default(EntityRef<D_Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDID", DbType="Int")]
		public System.Nullable<int> DDID
		{
			get
			{
				return this._DDID;
			}
			set
			{
				if ((this._DDID != value))
				{
					if (this._D_Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDIDChanging(value);
					this.SendPropertyChanging();
					this._DDID = value;
					this.SendPropertyChanged("DDID");
					this.OnDDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int")]
		public System.Nullable<int> BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_M_Department_Category", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.M_Department_Category.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.M_Department_Category.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(Nullable<int>);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_Department_M_Department_Category", Storage="_D_Department", ThisKey="DDID", OtherKey="DDID", IsForeignKey=true)]
		public D_Department D_Department
		{
			get
			{
				return this._D_Department.Entity;
			}
			set
			{
				D_Department previousValue = this._D_Department.Entity;
				if (((previousValue != value) 
							|| (this._D_Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_Department.Entity = null;
						previousValue.M_Department_Category.Remove(this);
					}
					this._D_Department.Entity = value;
					if ((value != null))
					{
						value.M_Department_Category.Add(this);
						this._DDID = value.DDID;
					}
					else
					{
						this._DDID = default(Nullable<int>);
					}
					this.SendPropertyChanged("D_Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Group_Menu")]
	public partial class M_Group_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _GID;
		
		private int _MDID;
		
		private bool _ShowFlag;
		
		private bool _AddFlag;
		
		private bool _EditFlag;
		
		private bool _DeleteFlag;
		
		private bool _PringFlag;
		
		private EntityRef<GroupData> _GroupData;
		
		private EntityRef<MenuData> _MenuData;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnGIDChanging(int value);
    partial void OnGIDChanged();
    partial void OnMDIDChanging(int value);
    partial void OnMDIDChanged();
    partial void OnShowFlagChanging(bool value);
    partial void OnShowFlagChanged();
    partial void OnAddFlagChanging(bool value);
    partial void OnAddFlagChanged();
    partial void OnEditFlagChanging(bool value);
    partial void OnEditFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnPringFlagChanging(bool value);
    partial void OnPringFlagChanged();
    #endregion
		
		public M_Group_Menu()
		{
			this._GroupData = default(EntityRef<GroupData>);
			this._MenuData = default(EntityRef<MenuData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GID", DbType="Int NOT NULL")]
		public int GID
		{
			get
			{
				return this._GID;
			}
			set
			{
				if ((this._GID != value))
				{
					if (this._GroupData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGIDChanging(value);
					this.SendPropertyChanging();
					this._GID = value;
					this.SendPropertyChanged("GID");
					this.OnGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDID", DbType="Int NOT NULL")]
		public int MDID
		{
			get
			{
				return this._MDID;
			}
			set
			{
				if ((this._MDID != value))
				{
					if (this._MenuData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDIDChanging(value);
					this.SendPropertyChanging();
					this._MDID = value;
					this.SendPropertyChanged("MDID");
					this.OnMDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowFlag", DbType="Bit NOT NULL")]
		public bool ShowFlag
		{
			get
			{
				return this._ShowFlag;
			}
			set
			{
				if ((this._ShowFlag != value))
				{
					this.OnShowFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowFlag = value;
					this.SendPropertyChanged("ShowFlag");
					this.OnShowFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddFlag", DbType="Bit NOT NULL")]
		public bool AddFlag
		{
			get
			{
				return this._AddFlag;
			}
			set
			{
				if ((this._AddFlag != value))
				{
					this.OnAddFlagChanging(value);
					this.SendPropertyChanging();
					this._AddFlag = value;
					this.SendPropertyChanged("AddFlag");
					this.OnAddFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditFlag", DbType="Bit NOT NULL")]
		public bool EditFlag
		{
			get
			{
				return this._EditFlag;
			}
			set
			{
				if ((this._EditFlag != value))
				{
					this.OnEditFlagChanging(value);
					this.SendPropertyChanging();
					this._EditFlag = value;
					this.SendPropertyChanged("EditFlag");
					this.OnEditFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PringFlag", DbType="Bit NOT NULL")]
		public bool PringFlag
		{
			get
			{
				return this._PringFlag;
			}
			set
			{
				if ((this._PringFlag != value))
				{
					this.OnPringFlagChanging(value);
					this.SendPropertyChanging();
					this._PringFlag = value;
					this.SendPropertyChanged("PringFlag");
					this.OnPringFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupData_M_Group_Menu", Storage="_GroupData", ThisKey="GID", OtherKey="GID", IsForeignKey=true)]
		public GroupData GroupData
		{
			get
			{
				return this._GroupData.Entity;
			}
			set
			{
				GroupData previousValue = this._GroupData.Entity;
				if (((previousValue != value) 
							|| (this._GroupData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupData.Entity = null;
						previousValue.M_Group_Menu.Remove(this);
					}
					this._GroupData.Entity = value;
					if ((value != null))
					{
						value.M_Group_Menu.Add(this);
						this._GID = value.GID;
					}
					else
					{
						this._GID = default(int);
					}
					this.SendPropertyChanged("GroupData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuData_M_Group_Menu", Storage="_MenuData", ThisKey="MDID", OtherKey="MDID", IsForeignKey=true)]
		public MenuData MenuData
		{
			get
			{
				return this._MenuData.Entity;
			}
			set
			{
				MenuData previousValue = this._MenuData.Entity;
				if (((previousValue != value) 
							|| (this._MenuData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MenuData.Entity = null;
						previousValue.M_Group_Menu.Remove(this);
					}
					this._MenuData.Entity = value;
					if ((value != null))
					{
						value.M_Group_Menu.Add(this);
						this._MDID = value.MDID;
					}
					else
					{
						this._MDID = default(int);
					}
					this.SendPropertyChanged("MenuData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Group_User")]
	public partial class M_Group_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _GID;
		
		private int _UID;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<GroupData> _GroupData;
		
		private EntityRef<UserData> _UserData;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnGIDChanging(int value);
    partial void OnGIDChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public M_Group_User()
		{
			this._GroupData = default(EntityRef<GroupData>);
			this._UserData = default(EntityRef<UserData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GID", DbType="Int NOT NULL")]
		public int GID
		{
			get
			{
				return this._GID;
			}
			set
			{
				if ((this._GID != value))
				{
					if (this._GroupData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGIDChanging(value);
					this.SendPropertyChanging();
					this._GID = value;
					this.SendPropertyChanged("GID");
					this.OnGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupData_M_Group_User", Storage="_GroupData", ThisKey="GID", OtherKey="GID", IsForeignKey=true)]
		public GroupData GroupData
		{
			get
			{
				return this._GroupData.Entity;
			}
			set
			{
				GroupData previousValue = this._GroupData.Entity;
				if (((previousValue != value) 
							|| (this._GroupData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupData.Entity = null;
						previousValue.M_Group_User.Remove(this);
					}
					this._GroupData.Entity = value;
					if ((value != null))
					{
						value.M_Group_User.Add(this);
						this._GID = value.GID;
					}
					else
					{
						this._GID = default(int);
					}
					this.SendPropertyChanged("GroupData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserData_M_Group_User", Storage="_UserData", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserData UserData
		{
			get
			{
				return this._UserData.Entity;
			}
			set
			{
				UserData previousValue = this._UserData.Entity;
				if (((previousValue != value) 
							|| (this._UserData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserData.Entity = null;
						previousValue.M_Group_User.Remove(this);
					}
					this._UserData.Entity = value;
					if ((value != null))
					{
						value.M_Group_User.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_Partner_Category")]
	public partial class M_Partner_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MID;
		
		private int _BPID;
		
		private int _BCID;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<B_Category> _B_Category;
		
		private EntityRef<B_Partner> _B_Partner;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(int value);
    partial void OnMIDChanged();
    partial void OnBPIDChanging(int value);
    partial void OnBPIDChanged();
    partial void OnBCIDChanging(int value);
    partial void OnBCIDChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public M_Partner_Category()
		{
			this._B_Category = default(EntityRef<B_Category>);
			this._B_Partner = default(EntityRef<B_Partner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPID", DbType="Int NOT NULL")]
		public int BPID
		{
			get
			{
				return this._BPID;
			}
			set
			{
				if ((this._BPID != value))
				{
					if (this._B_Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBPIDChanging(value);
					this.SendPropertyChanging();
					this._BPID = value;
					this.SendPropertyChanged("BPID");
					this.OnBPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int NOT NULL")]
		public int BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_M_Partner_Category", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.M_Partner_Category.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.M_Partner_Category.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(int);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Partner_M_Partner_Category", Storage="_B_Partner", ThisKey="BPID", OtherKey="BPID", IsForeignKey=true)]
		public B_Partner B_Partner
		{
			get
			{
				return this._B_Partner.Entity;
			}
			set
			{
				B_Partner previousValue = this._B_Partner.Entity;
				if (((previousValue != value) 
							|| (this._B_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Partner.Entity = null;
						previousValue.M_Partner_Category.Remove(this);
					}
					this._B_Partner.Entity = value;
					if ((value != null))
					{
						value.M_Partner_Category.Add(this);
						this._BPID = value.BPID;
					}
					else
					{
						this._BPID = default(int);
					}
					this.SendPropertyChanged("B_Partner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuData")]
	public partial class MenuData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MDID;
		
		private int _ParentID;
		
		private string _Title;
		
		private string _URL;
		
		private int _SortNo;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<M_Group_Menu> _M_Group_Menu;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMDIDChanging(int value);
    partial void OnMDIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public MenuData()
		{
			this._M_Group_Menu = new EntitySet<M_Group_Menu>(new Action<M_Group_Menu>(this.attach_M_Group_Menu), new Action<M_Group_Menu>(this.detach_M_Group_Menu));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MDID
		{
			get
			{
				return this._MDID;
			}
			set
			{
				if ((this._MDID != value))
				{
					this.OnMDIDChanging(value);
					this.SendPropertyChanging();
					this._MDID = value;
					this.SendPropertyChanged("MDID");
					this.OnMDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(300)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuData_M_Group_Menu", Storage="_M_Group_Menu", ThisKey="MDID", OtherKey="MDID")]
		public EntitySet<M_Group_Menu> M_Group_Menu
		{
			get
			{
				return this._M_Group_Menu;
			}
			set
			{
				this._M_Group_Menu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_Group_Menu(M_Group_Menu entity)
		{
			this.SendPropertyChanging();
			entity.MenuData = this;
		}
		
		private void detach_M_Group_Menu(M_Group_Menu entity)
		{
			this.SendPropertyChanging();
			entity.MenuData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_Bill_Detail")]
	public partial class Resver_Bill_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RBDID;
		
		private int _RBHID;
		
		private string _TargetTable;
		
		private int _TargetID;
		
		private int _Price;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<Resver_Bill_Header> _Resver_Bill_Header;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRBDIDChanging(int value);
    partial void OnRBDIDChanged();
    partial void OnRBHIDChanging(int value);
    partial void OnRBHIDChanged();
    partial void OnTargetTableChanging(string value);
    partial void OnTargetTableChanged();
    partial void OnTargetIDChanging(int value);
    partial void OnTargetIDChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Resver_Bill_Detail()
		{
			this._Resver_Bill_Header = default(EntityRef<Resver_Bill_Header>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RBDID
		{
			get
			{
				return this._RBDID;
			}
			set
			{
				if ((this._RBDID != value))
				{
					this.OnRBDIDChanging(value);
					this.SendPropertyChanging();
					this._RBDID = value;
					this.SendPropertyChanged("RBDID");
					this.OnRBDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBHID", DbType="Int NOT NULL")]
		public int RBHID
		{
			get
			{
				return this._RBHID;
			}
			set
			{
				if ((this._RBHID != value))
				{
					if (this._Resver_Bill_Header.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRBHIDChanging(value);
					this.SendPropertyChanging();
					this._RBHID = value;
					this.SendPropertyChanged("RBHID");
					this.OnRBHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetTable", DbType="VarChar(30)")]
		public string TargetTable
		{
			get
			{
				return this._TargetTable;
			}
			set
			{
				if ((this._TargetTable != value))
				{
					this.OnTargetTableChanging(value);
					this.SendPropertyChanging();
					this._TargetTable = value;
					this.SendPropertyChanged("TargetTable");
					this.OnTargetTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int NOT NULL")]
		public int TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Bill_Header_Resver_Bill_Detail", Storage="_Resver_Bill_Header", ThisKey="RBHID", OtherKey="RBHID", IsForeignKey=true)]
		public Resver_Bill_Header Resver_Bill_Header
		{
			get
			{
				return this._Resver_Bill_Header.Entity;
			}
			set
			{
				Resver_Bill_Header previousValue = this._Resver_Bill_Header.Entity;
				if (((previousValue != value) 
							|| (this._Resver_Bill_Header.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resver_Bill_Header.Entity = null;
						previousValue.Resver_Bill_Detail.Remove(this);
					}
					this._Resver_Bill_Header.Entity = value;
					if ((value != null))
					{
						value.Resver_Bill_Detail.Add(this);
						this._RBHID = value.RBHID;
					}
					else
					{
						this._RBHID = default(int);
					}
					this.SendPropertyChanged("Resver_Bill_Header");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_Bill_Header")]
	public partial class Resver_Bill_Header : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RBHID;
		
		private int _RHID;
		
		private int _BCID;
		
		private int _DPTID;
		
		private int _Price;
		
		private bool _PayFlag;
		
		private System.DateTime _PayDate;
		
		private int _CheckUID;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Bill_Detail> _Resver_Bill_Detail;
		
		private EntityRef<B_Category> _B_Category;
		
		private EntityRef<Resver_Head> _Resver_Head;
		
		private EntityRef<D_PayType> _D_PayType;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRBHIDChanging(int value);
    partial void OnRBHIDChanged();
    partial void OnRHIDChanging(int value);
    partial void OnRHIDChanged();
    partial void OnBCIDChanging(int value);
    partial void OnBCIDChanged();
    partial void OnDPTIDChanging(int value);
    partial void OnDPTIDChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnPayFlagChanging(bool value);
    partial void OnPayFlagChanged();
    partial void OnPayDateChanging(System.DateTime value);
    partial void OnPayDateChanged();
    partial void OnCheckUIDChanging(int value);
    partial void OnCheckUIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Resver_Bill_Header()
		{
			this._Resver_Bill_Detail = new EntitySet<Resver_Bill_Detail>(new Action<Resver_Bill_Detail>(this.attach_Resver_Bill_Detail), new Action<Resver_Bill_Detail>(this.detach_Resver_Bill_Detail));
			this._B_Category = default(EntityRef<B_Category>);
			this._Resver_Head = default(EntityRef<Resver_Head>);
			this._D_PayType = default(EntityRef<D_PayType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RBHID
		{
			get
			{
				return this._RBHID;
			}
			set
			{
				if ((this._RBHID != value))
				{
					this.OnRBHIDChanging(value);
					this.SendPropertyChanging();
					this._RBHID = value;
					this.SendPropertyChanged("RBHID");
					this.OnRBHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHID", DbType="Int NOT NULL")]
		public int RHID
		{
			get
			{
				return this._RHID;
			}
			set
			{
				if ((this._RHID != value))
				{
					if (this._Resver_Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRHIDChanging(value);
					this.SendPropertyChanging();
					this._RHID = value;
					this.SendPropertyChanged("RHID");
					this.OnRHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int NOT NULL")]
		public int BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPTID", DbType="Int NOT NULL")]
		public int DPTID
		{
			get
			{
				return this._DPTID;
			}
			set
			{
				if ((this._DPTID != value))
				{
					if (this._D_PayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDPTIDChanging(value);
					this.SendPropertyChanging();
					this._DPTID = value;
					this.SendPropertyChanged("DPTID");
					this.OnDPTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFlag", DbType="Bit NOT NULL")]
		public bool PayFlag
		{
			get
			{
				return this._PayFlag;
			}
			set
			{
				if ((this._PayFlag != value))
				{
					this.OnPayFlagChanging(value);
					this.SendPropertyChanging();
					this._PayFlag = value;
					this.SendPropertyChanged("PayFlag");
					this.OnPayFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="DateTime NOT NULL")]
		public System.DateTime PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUID", DbType="Int NOT NULL")]
		public int CheckUID
		{
			get
			{
				return this._CheckUID;
			}
			set
			{
				if ((this._CheckUID != value))
				{
					this.OnCheckUIDChanging(value);
					this.SendPropertyChanging();
					this._CheckUID = value;
					this.SendPropertyChanged("CheckUID");
					this.OnCheckUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Bill_Header_Resver_Bill_Detail", Storage="_Resver_Bill_Detail", ThisKey="RBHID", OtherKey="RBHID")]
		public EntitySet<Resver_Bill_Detail> Resver_Bill_Detail
		{
			get
			{
				return this._Resver_Bill_Detail;
			}
			set
			{
				this._Resver_Bill_Detail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_Resver_Bill_Header", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.Resver_Bill_Header.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.Resver_Bill_Header.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(int);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Bill_Header", Storage="_Resver_Head", ThisKey="RHID", OtherKey="RHID", IsForeignKey=true)]
		public Resver_Head Resver_Head
		{
			get
			{
				return this._Resver_Head.Entity;
			}
			set
			{
				Resver_Head previousValue = this._Resver_Head.Entity;
				if (((previousValue != value) 
							|| (this._Resver_Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resver_Head.Entity = null;
						previousValue.Resver_Bill_Header.Remove(this);
					}
					this._Resver_Head.Entity = value;
					if ((value != null))
					{
						value.Resver_Bill_Header.Add(this);
						this._RHID = value.RHID;
					}
					else
					{
						this._RHID = default(int);
					}
					this.SendPropertyChanged("Resver_Head");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_PayType_Resver_Bill_Header", Storage="_D_PayType", ThisKey="DPTID", OtherKey="DPTID", IsForeignKey=true)]
		public D_PayType D_PayType
		{
			get
			{
				return this._D_PayType.Entity;
			}
			set
			{
				D_PayType previousValue = this._D_PayType.Entity;
				if (((previousValue != value) 
							|| (this._D_PayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_PayType.Entity = null;
						previousValue.Resver_Bill_Header.Remove(this);
					}
					this._D_PayType.Entity = value;
					if ((value != null))
					{
						value.Resver_Bill_Header.Add(this);
						this._DPTID = value.DPTID;
					}
					else
					{
						this._DPTID = default(int);
					}
					this.SendPropertyChanged("D_PayType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Bill_Detail(Resver_Bill_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Bill_Header = this;
		}
		
		private void detach_Resver_Bill_Detail(Resver_Bill_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Bill_Header = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_Device")]
	public partial class Resver_Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RDID;
		
		private int _RHID;
		
		private System.DateTime _TargetDate;
		
		private int _DTSIDS;
		
		private int _DTSIDE;
		
		private int _BSID;
		
		private int _BDID;
		
		private int _BOCID;
		
		private string _PrintTitle;
		
		private string _PrintNote;
		
		private int _UnitPrice;
		
		private int _Pricing;
		
		private int _Ct;
		
		private int _TotalPrice;
		
		private int _SortNo;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<B_Device> _B_Device;
		
		private EntityRef<B_SiteData> _B_SiteData;
		
		private EntityRef<D_TimeSpan> _D_TimeSpan;
		
		private EntityRef<D_TimeSpan> _D_TimeSpan1;
		
		private EntityRef<Resver_Head> _Resver_Head;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRDIDChanging(int value);
    partial void OnRDIDChanged();
    partial void OnRHIDChanging(int value);
    partial void OnRHIDChanged();
    partial void OnTargetDateChanging(System.DateTime value);
    partial void OnTargetDateChanged();
    partial void OnDTSIDSChanging(int value);
    partial void OnDTSIDSChanged();
    partial void OnDTSIDEChanging(int value);
    partial void OnDTSIDEChanged();
    partial void OnBSIDChanging(int value);
    partial void OnBSIDChanged();
    partial void OnBDIDChanging(int value);
    partial void OnBDIDChanged();
    partial void OnBOCIDChanging(int value);
    partial void OnBOCIDChanged();
    partial void OnPrintTitleChanging(string value);
    partial void OnPrintTitleChanged();
    partial void OnPrintNoteChanging(string value);
    partial void OnPrintNoteChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnPricingChanging(int value);
    partial void OnPricingChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnTotalPriceChanging(int value);
    partial void OnTotalPriceChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Resver_Device()
		{
			this._B_Device = default(EntityRef<B_Device>);
			this._B_SiteData = default(EntityRef<B_SiteData>);
			this._D_TimeSpan = default(EntityRef<D_TimeSpan>);
			this._D_TimeSpan1 = default(EntityRef<D_TimeSpan>);
			this._Resver_Head = default(EntityRef<Resver_Head>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RDID
		{
			get
			{
				return this._RDID;
			}
			set
			{
				if ((this._RDID != value))
				{
					this.OnRDIDChanging(value);
					this.SendPropertyChanging();
					this._RDID = value;
					this.SendPropertyChanged("RDID");
					this.OnRDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHID", DbType="Int NOT NULL")]
		public int RHID
		{
			get
			{
				return this._RHID;
			}
			set
			{
				if ((this._RHID != value))
				{
					if (this._Resver_Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRHIDChanging(value);
					this.SendPropertyChanging();
					this._RHID = value;
					this.SendPropertyChanged("RHID");
					this.OnRHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDate", DbType="DateTime NOT NULL")]
		public System.DateTime TargetDate
		{
			get
			{
				return this._TargetDate;
			}
			set
			{
				if ((this._TargetDate != value))
				{
					this.OnTargetDateChanging(value);
					this.SendPropertyChanging();
					this._TargetDate = value;
					this.SendPropertyChanged("TargetDate");
					this.OnTargetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTSIDS", DbType="Int NOT NULL")]
		public int DTSIDS
		{
			get
			{
				return this._DTSIDS;
			}
			set
			{
				if ((this._DTSIDS != value))
				{
					if (this._D_TimeSpan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDTSIDSChanging(value);
					this.SendPropertyChanging();
					this._DTSIDS = value;
					this.SendPropertyChanged("DTSIDS");
					this.OnDTSIDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTSIDE", DbType="Int NOT NULL")]
		public int DTSIDE
		{
			get
			{
				return this._DTSIDE;
			}
			set
			{
				if ((this._DTSIDE != value))
				{
					if (this._D_TimeSpan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDTSIDEChanging(value);
					this.SendPropertyChanging();
					this._DTSIDE = value;
					this.SendPropertyChanged("DTSIDE");
					this.OnDTSIDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSID", DbType="Int NOT NULL")]
		public int BSID
		{
			get
			{
				return this._BSID;
			}
			set
			{
				if ((this._BSID != value))
				{
					if (this._B_SiteData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSIDChanging(value);
					this.SendPropertyChanging();
					this._BSID = value;
					this.SendPropertyChanged("BSID");
					this.OnBSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDID", DbType="Int NOT NULL")]
		public int BDID
		{
			get
			{
				return this._BDID;
			}
			set
			{
				if ((this._BDID != value))
				{
					if (this._B_Device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBDIDChanging(value);
					this.SendPropertyChanging();
					this._BDID = value;
					this.SendPropertyChanged("BDID");
					this.OnBDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOCID", DbType="Int NOT NULL")]
		public int BOCID
		{
			get
			{
				return this._BOCID;
			}
			set
			{
				if ((this._BOCID != value))
				{
					this.OnBOCIDChanging(value);
					this.SendPropertyChanging();
					this._BOCID = value;
					this.SendPropertyChanged("BOCID");
					this.OnBOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTitle", DbType="NVarChar(100)")]
		public string PrintTitle
		{
			get
			{
				return this._PrintTitle;
			}
			set
			{
				if ((this._PrintTitle != value))
				{
					this.OnPrintTitleChanging(value);
					this.SendPropertyChanging();
					this._PrintTitle = value;
					this.SendPropertyChanged("PrintTitle");
					this.OnPrintTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintNote", DbType="NVarChar(100)")]
		public string PrintNote
		{
			get
			{
				return this._PrintNote;
			}
			set
			{
				if ((this._PrintNote != value))
				{
					this.OnPrintNoteChanging(value);
					this.SendPropertyChanging();
					this._PrintNote = value;
					this.SendPropertyChanged("PrintNote");
					this.OnPrintNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pricing", DbType="Int NOT NULL")]
		public int Pricing
		{
			get
			{
				return this._Pricing;
			}
			set
			{
				if ((this._Pricing != value))
				{
					this.OnPricingChanging(value);
					this.SendPropertyChanging();
					this._Pricing = value;
					this.SendPropertyChanged("Pricing");
					this.OnPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Int NOT NULL")]
		public int TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Device_Resver_Device", Storage="_B_Device", ThisKey="BDID", OtherKey="BDID", IsForeignKey=true)]
		public B_Device B_Device
		{
			get
			{
				return this._B_Device.Entity;
			}
			set
			{
				B_Device previousValue = this._B_Device.Entity;
				if (((previousValue != value) 
							|| (this._B_Device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Device.Entity = null;
						previousValue.Resver_Device.Remove(this);
					}
					this._B_Device.Entity = value;
					if ((value != null))
					{
						value.Resver_Device.Add(this);
						this._BDID = value.BDID;
					}
					else
					{
						this._BDID = default(int);
					}
					this.SendPropertyChanged("B_Device");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_SiteData_Resver_Device", Storage="_B_SiteData", ThisKey="BSID", OtherKey="BSID", IsForeignKey=true)]
		public B_SiteData B_SiteData
		{
			get
			{
				return this._B_SiteData.Entity;
			}
			set
			{
				B_SiteData previousValue = this._B_SiteData.Entity;
				if (((previousValue != value) 
							|| (this._B_SiteData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_SiteData.Entity = null;
						previousValue.Resver_Device.Remove(this);
					}
					this._B_SiteData.Entity = value;
					if ((value != null))
					{
						value.Resver_Device.Add(this);
						this._BSID = value.BSID;
					}
					else
					{
						this._BSID = default(int);
					}
					this.SendPropertyChanged("B_SiteData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_TimeSpan_Resver_Device", Storage="_D_TimeSpan", ThisKey="DTSIDE", OtherKey="DTSID", IsForeignKey=true)]
		public D_TimeSpan D_TimeSpan
		{
			get
			{
				return this._D_TimeSpan.Entity;
			}
			set
			{
				D_TimeSpan previousValue = this._D_TimeSpan.Entity;
				if (((previousValue != value) 
							|| (this._D_TimeSpan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_TimeSpan.Entity = null;
						previousValue.Resver_Device.Remove(this);
					}
					this._D_TimeSpan.Entity = value;
					if ((value != null))
					{
						value.Resver_Device.Add(this);
						this._DTSIDE = value.DTSID;
					}
					else
					{
						this._DTSIDE = default(int);
					}
					this.SendPropertyChanged("D_TimeSpan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_TimeSpan_Resver_Device1", Storage="_D_TimeSpan1", ThisKey="DTSIDS", OtherKey="DTSID", IsForeignKey=true)]
		public D_TimeSpan D_TimeSpan1
		{
			get
			{
				return this._D_TimeSpan1.Entity;
			}
			set
			{
				D_TimeSpan previousValue = this._D_TimeSpan1.Entity;
				if (((previousValue != value) 
							|| (this._D_TimeSpan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_TimeSpan1.Entity = null;
						previousValue.Resver_Device1.Remove(this);
					}
					this._D_TimeSpan1.Entity = value;
					if ((value != null))
					{
						value.Resver_Device1.Add(this);
						this._DTSIDS = value.DTSID;
					}
					else
					{
						this._DTSIDS = default(int);
					}
					this.SendPropertyChanged("D_TimeSpan1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Device", Storage="_Resver_Head", ThisKey="RHID", OtherKey="RHID", IsForeignKey=true)]
		public Resver_Head Resver_Head
		{
			get
			{
				return this._Resver_Head.Entity;
			}
			set
			{
				Resver_Head previousValue = this._Resver_Head.Entity;
				if (((previousValue != value) 
							|| (this._Resver_Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resver_Head.Entity = null;
						previousValue.Resver_Device.Remove(this);
					}
					this._Resver_Head.Entity = value;
					if ((value != null))
					{
						value.Resver_Device.Add(this);
						this._RHID = value.RHID;
					}
					else
					{
						this._RHID = default(int);
					}
					this.SendPropertyChanged("Resver_Head");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_GiveBack")]
	public partial class Resver_GiveBack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RGBID;
		
		private int _RHID;
		
		private string _Title;
		
		private string _Description;
		
		private double _Point;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<Resver_Head> _Resver_Head;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRGBIDChanging(int value);
    partial void OnRGBIDChanged();
    partial void OnRHIDChanging(int value);
    partial void OnRHIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPointChanging(double value);
    partial void OnPointChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Resver_GiveBack()
		{
			this._Resver_Head = default(EntityRef<Resver_Head>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGBID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RGBID
		{
			get
			{
				return this._RGBID;
			}
			set
			{
				if ((this._RGBID != value))
				{
					this.OnRGBIDChanging(value);
					this.SendPropertyChanging();
					this._RGBID = value;
					this.SendPropertyChanged("RGBID");
					this.OnRGBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHID", DbType="Int NOT NULL")]
		public int RHID
		{
			get
			{
				return this._RHID;
			}
			set
			{
				if ((this._RHID != value))
				{
					if (this._Resver_Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRHIDChanging(value);
					this.SendPropertyChanging();
					this._RHID = value;
					this.SendPropertyChanged("RHID");
					this.OnRHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Float NOT NULL")]
		public double Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._Point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_GiveBack", Storage="_Resver_Head", ThisKey="RHID", OtherKey="RHID", IsForeignKey=true)]
		public Resver_Head Resver_Head
		{
			get
			{
				return this._Resver_Head.Entity;
			}
			set
			{
				Resver_Head previousValue = this._Resver_Head.Entity;
				if (((previousValue != value) 
							|| (this._Resver_Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resver_Head.Entity = null;
						previousValue.Resver_GiveBack.Remove(this);
					}
					this._Resver_Head.Entity = value;
					if ((value != null))
					{
						value.Resver_GiveBack.Add(this);
						this._RHID = value.RHID;
					}
					else
					{
						this._RHID = default(int);
					}
					this.SendPropertyChanged("Resver_Head");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_Head")]
	public partial class Resver_Head : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RHID;
		
		private string _Code;
		
		private System.DateTime _SDate;
		
		private System.DateTime _EDate;
		
		private int _BSCID12;
		
		private int _BSCID11;
		
		private string _Title;
		
		private int _CID;
		
		private string _CustomerTitle;
		
		private string _ContactName;
		
		private int _PeopleCt;
		
		private string _Note;
		
		private int _MK_BUID;
		
		private string _MK_Phone;
		
		private int _OP_BUID;
		
		private string _OP_Phone;
		
		private bool _CheckFlag;
		
		private bool _CheckInFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Bill_Header> _Resver_Bill_Header;
		
		private EntitySet<Resver_Device> _Resver_Device;
		
		private EntitySet<Resver_GiveBack> _Resver_GiveBack;
		
		private EntitySet<Resver_Other> _Resver_Other;
		
		private EntitySet<Resver_Site> _Resver_Site;
		
		private EntitySet<Resver_Throw> _Resver_Throw;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<B_StaticCode> _B_StaticCode1;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRHIDChanging(int value);
    partial void OnRHIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSDateChanging(System.DateTime value);
    partial void OnSDateChanged();
    partial void OnEDateChanging(System.DateTime value);
    partial void OnEDateChanged();
    partial void OnBSCID12Changing(int value);
    partial void OnBSCID12Changed();
    partial void OnBSCID11Changing(int value);
    partial void OnBSCID11Changed();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnCustomerTitleChanging(string value);
    partial void OnCustomerTitleChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnPeopleCtChanging(int value);
    partial void OnPeopleCtChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnMK_BUIDChanging(int value);
    partial void OnMK_BUIDChanged();
    partial void OnMK_PhoneChanging(string value);
    partial void OnMK_PhoneChanged();
    partial void OnOP_BUIDChanging(int value);
    partial void OnOP_BUIDChanged();
    partial void OnOP_PhoneChanging(string value);
    partial void OnOP_PhoneChanged();
    partial void OnCheckFlagChanging(bool value);
    partial void OnCheckFlagChanged();
    partial void OnCheckInFlagChanging(bool value);
    partial void OnCheckInFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Resver_Head()
		{
			this._Resver_Bill_Header = new EntitySet<Resver_Bill_Header>(new Action<Resver_Bill_Header>(this.attach_Resver_Bill_Header), new Action<Resver_Bill_Header>(this.detach_Resver_Bill_Header));
			this._Resver_Device = new EntitySet<Resver_Device>(new Action<Resver_Device>(this.attach_Resver_Device), new Action<Resver_Device>(this.detach_Resver_Device));
			this._Resver_GiveBack = new EntitySet<Resver_GiveBack>(new Action<Resver_GiveBack>(this.attach_Resver_GiveBack), new Action<Resver_GiveBack>(this.detach_Resver_GiveBack));
			this._Resver_Other = new EntitySet<Resver_Other>(new Action<Resver_Other>(this.attach_Resver_Other), new Action<Resver_Other>(this.detach_Resver_Other));
			this._Resver_Site = new EntitySet<Resver_Site>(new Action<Resver_Site>(this.attach_Resver_Site), new Action<Resver_Site>(this.detach_Resver_Site));
			this._Resver_Throw = new EntitySet<Resver_Throw>(new Action<Resver_Throw>(this.attach_Resver_Throw), new Action<Resver_Throw>(this.detach_Resver_Throw));
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._B_StaticCode1 = default(EntityRef<B_StaticCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RHID
		{
			get
			{
				return this._RHID;
			}
			set
			{
				if ((this._RHID != value))
				{
					this.OnRHIDChanging(value);
					this.SendPropertyChanging();
					this._RHID = value;
					this.SendPropertyChanged("RHID");
					this.OnRHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDate", DbType="DateTime NOT NULL")]
		public System.DateTime SDate
		{
			get
			{
				return this._SDate;
			}
			set
			{
				if ((this._SDate != value))
				{
					this.OnSDateChanging(value);
					this.SendPropertyChanging();
					this._SDate = value;
					this.SendPropertyChanged("SDate");
					this.OnSDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDate", DbType="DateTime NOT NULL")]
		public System.DateTime EDate
		{
			get
			{
				return this._EDate;
			}
			set
			{
				if ((this._EDate != value))
				{
					this.OnEDateChanging(value);
					this.SendPropertyChanging();
					this._EDate = value;
					this.SendPropertyChanged("EDate");
					this.OnEDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID12", DbType="Int NOT NULL")]
		public int BSCID12
		{
			get
			{
				return this._BSCID12;
			}
			set
			{
				if ((this._BSCID12 != value))
				{
					if (this._B_StaticCode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCID12Changing(value);
					this.SendPropertyChanging();
					this._BSCID12 = value;
					this.SendPropertyChanged("BSCID12");
					this.OnBSCID12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID11", DbType="Int NOT NULL")]
		public int BSCID11
		{
			get
			{
				return this._BSCID11;
			}
			set
			{
				if ((this._BSCID11 != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCID11Changing(value);
					this.SendPropertyChanging();
					this._BSCID11 = value;
					this.SendPropertyChanged("BSCID11");
					this.OnBSCID11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTitle", DbType="NVarChar(100)")]
		public string CustomerTitle
		{
			get
			{
				return this._CustomerTitle;
			}
			set
			{
				if ((this._CustomerTitle != value))
				{
					this.OnCustomerTitleChanging(value);
					this.SendPropertyChanging();
					this._CustomerTitle = value;
					this.SendPropertyChanged("CustomerTitle");
					this.OnCustomerTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeopleCt", DbType="Int NOT NULL")]
		public int PeopleCt
		{
			get
			{
				return this._PeopleCt;
			}
			set
			{
				if ((this._PeopleCt != value))
				{
					this.OnPeopleCtChanging(value);
					this.SendPropertyChanging();
					this._PeopleCt = value;
					this.SendPropertyChanged("PeopleCt");
					this.OnPeopleCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NChar(10)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK_BUID", DbType="Int NOT NULL")]
		public int MK_BUID
		{
			get
			{
				return this._MK_BUID;
			}
			set
			{
				if ((this._MK_BUID != value))
				{
					this.OnMK_BUIDChanging(value);
					this.SendPropertyChanging();
					this._MK_BUID = value;
					this.SendPropertyChanged("MK_BUID");
					this.OnMK_BUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK_Phone", DbType="NVarChar(50)")]
		public string MK_Phone
		{
			get
			{
				return this._MK_Phone;
			}
			set
			{
				if ((this._MK_Phone != value))
				{
					this.OnMK_PhoneChanging(value);
					this.SendPropertyChanging();
					this._MK_Phone = value;
					this.SendPropertyChanged("MK_Phone");
					this.OnMK_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OP_BUID", DbType="Int NOT NULL")]
		public int OP_BUID
		{
			get
			{
				return this._OP_BUID;
			}
			set
			{
				if ((this._OP_BUID != value))
				{
					this.OnOP_BUIDChanging(value);
					this.SendPropertyChanging();
					this._OP_BUID = value;
					this.SendPropertyChanged("OP_BUID");
					this.OnOP_BUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OP_Phone", DbType="NVarChar(50)")]
		public string OP_Phone
		{
			get
			{
				return this._OP_Phone;
			}
			set
			{
				if ((this._OP_Phone != value))
				{
					this.OnOP_PhoneChanging(value);
					this.SendPropertyChanging();
					this._OP_Phone = value;
					this.SendPropertyChanged("OP_Phone");
					this.OnOP_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckFlag", DbType="Bit NOT NULL")]
		public bool CheckFlag
		{
			get
			{
				return this._CheckFlag;
			}
			set
			{
				if ((this._CheckFlag != value))
				{
					this.OnCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._CheckFlag = value;
					this.SendPropertyChanged("CheckFlag");
					this.OnCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInFlag", DbType="Bit NOT NULL")]
		public bool CheckInFlag
		{
			get
			{
				return this._CheckInFlag;
			}
			set
			{
				if ((this._CheckInFlag != value))
				{
					this.OnCheckInFlagChanging(value);
					this.SendPropertyChanging();
					this._CheckInFlag = value;
					this.SendPropertyChanged("CheckInFlag");
					this.OnCheckInFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Bill_Header", Storage="_Resver_Bill_Header", ThisKey="RHID", OtherKey="RHID")]
		public EntitySet<Resver_Bill_Header> Resver_Bill_Header
		{
			get
			{
				return this._Resver_Bill_Header;
			}
			set
			{
				this._Resver_Bill_Header.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Device", Storage="_Resver_Device", ThisKey="RHID", OtherKey="RHID")]
		public EntitySet<Resver_Device> Resver_Device
		{
			get
			{
				return this._Resver_Device;
			}
			set
			{
				this._Resver_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_GiveBack", Storage="_Resver_GiveBack", ThisKey="RHID", OtherKey="RHID")]
		public EntitySet<Resver_GiveBack> Resver_GiveBack
		{
			get
			{
				return this._Resver_GiveBack;
			}
			set
			{
				this._Resver_GiveBack.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Other", Storage="_Resver_Other", ThisKey="RHID", OtherKey="RHID")]
		public EntitySet<Resver_Other> Resver_Other
		{
			get
			{
				return this._Resver_Other;
			}
			set
			{
				this._Resver_Other.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Site", Storage="_Resver_Site", ThisKey="RHID", OtherKey="RHID")]
		public EntitySet<Resver_Site> Resver_Site
		{
			get
			{
				return this._Resver_Site;
			}
			set
			{
				this._Resver_Site.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Throw", Storage="_Resver_Throw", ThisKey="RHID", OtherKey="RHID")]
		public EntitySet<Resver_Throw> Resver_Throw
		{
			get
			{
				return this._Resver_Throw;
			}
			set
			{
				this._Resver_Throw.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Head", Storage="_B_StaticCode", ThisKey="BSCID11", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.Resver_Head.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.Resver_Head.Add(this);
						this._BSCID11 = value.BSCID;
					}
					else
					{
						this._BSCID11 = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Head1", Storage="_B_StaticCode1", ThisKey="BSCID12", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode1
		{
			get
			{
				return this._B_StaticCode1.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode1.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode1.Entity = null;
						previousValue.Resver_Head1.Remove(this);
					}
					this._B_StaticCode1.Entity = value;
					if ((value != null))
					{
						value.Resver_Head1.Add(this);
						this._BSCID12 = value.BSCID;
					}
					else
					{
						this._BSCID12 = default(int);
					}
					this.SendPropertyChanged("B_StaticCode1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Bill_Header(Resver_Bill_Header entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = this;
		}
		
		private void detach_Resver_Bill_Header(Resver_Bill_Header entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = null;
		}
		
		private void attach_Resver_Device(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = this;
		}
		
		private void detach_Resver_Device(Resver_Device entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = null;
		}
		
		private void attach_Resver_GiveBack(Resver_GiveBack entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = this;
		}
		
		private void detach_Resver_GiveBack(Resver_GiveBack entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = null;
		}
		
		private void attach_Resver_Other(Resver_Other entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = this;
		}
		
		private void detach_Resver_Other(Resver_Other entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = null;
		}
		
		private void attach_Resver_Site(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = this;
		}
		
		private void detach_Resver_Site(Resver_Site entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = null;
		}
		
		private void attach_Resver_Throw(Resver_Throw entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = this;
		}
		
		private void detach_Resver_Throw(Resver_Throw entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Head = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_Other")]
	public partial class Resver_Other : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ROID;
		
		private int _RHID;
		
		private System.DateTime _TargetDate;
		
		private int _BSID;
		
		private int _DOPIID;
		
		private int _BOCID;
		
		private string _PrintTitle;
		
		private string _PrintNote;
		
		private int _UnitPrice;
		
		private int _Pricing;
		
		private int _Ct;
		
		private int _TotalPrice;
		
		private int _SortNo;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<B_SiteData> _B_SiteData;
		
		private EntityRef<D_OtherPayItem> _D_OtherPayItem;
		
		private EntityRef<Resver_Head> _Resver_Head;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROIDChanging(int value);
    partial void OnROIDChanged();
    partial void OnRHIDChanging(int value);
    partial void OnRHIDChanged();
    partial void OnTargetDateChanging(System.DateTime value);
    partial void OnTargetDateChanged();
    partial void OnBSIDChanging(int value);
    partial void OnBSIDChanged();
    partial void OnDOPIIDChanging(int value);
    partial void OnDOPIIDChanged();
    partial void OnBOCIDChanging(int value);
    partial void OnBOCIDChanged();
    partial void OnPrintTitleChanging(string value);
    partial void OnPrintTitleChanged();
    partial void OnPrintNoteChanging(string value);
    partial void OnPrintNoteChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnPricingChanging(int value);
    partial void OnPricingChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnTotalPriceChanging(int value);
    partial void OnTotalPriceChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Resver_Other()
		{
			this._B_SiteData = default(EntityRef<B_SiteData>);
			this._D_OtherPayItem = default(EntityRef<D_OtherPayItem>);
			this._Resver_Head = default(EntityRef<Resver_Head>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ROID
		{
			get
			{
				return this._ROID;
			}
			set
			{
				if ((this._ROID != value))
				{
					this.OnROIDChanging(value);
					this.SendPropertyChanging();
					this._ROID = value;
					this.SendPropertyChanged("ROID");
					this.OnROIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHID", DbType="Int NOT NULL")]
		public int RHID
		{
			get
			{
				return this._RHID;
			}
			set
			{
				if ((this._RHID != value))
				{
					if (this._Resver_Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRHIDChanging(value);
					this.SendPropertyChanging();
					this._RHID = value;
					this.SendPropertyChanged("RHID");
					this.OnRHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDate", DbType="DateTime NOT NULL")]
		public System.DateTime TargetDate
		{
			get
			{
				return this._TargetDate;
			}
			set
			{
				if ((this._TargetDate != value))
				{
					this.OnTargetDateChanging(value);
					this.SendPropertyChanging();
					this._TargetDate = value;
					this.SendPropertyChanged("TargetDate");
					this.OnTargetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSID", DbType="Int NOT NULL")]
		public int BSID
		{
			get
			{
				return this._BSID;
			}
			set
			{
				if ((this._BSID != value))
				{
					if (this._B_SiteData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSIDChanging(value);
					this.SendPropertyChanging();
					this._BSID = value;
					this.SendPropertyChanged("BSID");
					this.OnBSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOPIID", DbType="Int NOT NULL")]
		public int DOPIID
		{
			get
			{
				return this._DOPIID;
			}
			set
			{
				if ((this._DOPIID != value))
				{
					if (this._D_OtherPayItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDOPIIDChanging(value);
					this.SendPropertyChanging();
					this._DOPIID = value;
					this.SendPropertyChanged("DOPIID");
					this.OnDOPIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOCID", DbType="Int NOT NULL")]
		public int BOCID
		{
			get
			{
				return this._BOCID;
			}
			set
			{
				if ((this._BOCID != value))
				{
					this.OnBOCIDChanging(value);
					this.SendPropertyChanging();
					this._BOCID = value;
					this.SendPropertyChanged("BOCID");
					this.OnBOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTitle", DbType="NVarChar(100)")]
		public string PrintTitle
		{
			get
			{
				return this._PrintTitle;
			}
			set
			{
				if ((this._PrintTitle != value))
				{
					this.OnPrintTitleChanging(value);
					this.SendPropertyChanging();
					this._PrintTitle = value;
					this.SendPropertyChanged("PrintTitle");
					this.OnPrintTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintNote", DbType="NVarChar(100)")]
		public string PrintNote
		{
			get
			{
				return this._PrintNote;
			}
			set
			{
				if ((this._PrintNote != value))
				{
					this.OnPrintNoteChanging(value);
					this.SendPropertyChanging();
					this._PrintNote = value;
					this.SendPropertyChanged("PrintNote");
					this.OnPrintNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pricing", DbType="Int NOT NULL")]
		public int Pricing
		{
			get
			{
				return this._Pricing;
			}
			set
			{
				if ((this._Pricing != value))
				{
					this.OnPricingChanging(value);
					this.SendPropertyChanging();
					this._Pricing = value;
					this.SendPropertyChanged("Pricing");
					this.OnPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Int NOT NULL")]
		public int TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_SiteData_Resver_Other", Storage="_B_SiteData", ThisKey="BSID", OtherKey="BSID", IsForeignKey=true)]
		public B_SiteData B_SiteData
		{
			get
			{
				return this._B_SiteData.Entity;
			}
			set
			{
				B_SiteData previousValue = this._B_SiteData.Entity;
				if (((previousValue != value) 
							|| (this._B_SiteData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_SiteData.Entity = null;
						previousValue.Resver_Other.Remove(this);
					}
					this._B_SiteData.Entity = value;
					if ((value != null))
					{
						value.Resver_Other.Add(this);
						this._BSID = value.BSID;
					}
					else
					{
						this._BSID = default(int);
					}
					this.SendPropertyChanged("B_SiteData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_OtherPayItem_Resver_Other", Storage="_D_OtherPayItem", ThisKey="DOPIID", OtherKey="DOPIID", IsForeignKey=true)]
		public D_OtherPayItem D_OtherPayItem
		{
			get
			{
				return this._D_OtherPayItem.Entity;
			}
			set
			{
				D_OtherPayItem previousValue = this._D_OtherPayItem.Entity;
				if (((previousValue != value) 
							|| (this._D_OtherPayItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_OtherPayItem.Entity = null;
						previousValue.Resver_Other.Remove(this);
					}
					this._D_OtherPayItem.Entity = value;
					if ((value != null))
					{
						value.Resver_Other.Add(this);
						this._DOPIID = value.DOPIID;
					}
					else
					{
						this._DOPIID = default(int);
					}
					this.SendPropertyChanged("D_OtherPayItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Other", Storage="_Resver_Head", ThisKey="RHID", OtherKey="RHID", IsForeignKey=true)]
		public Resver_Head Resver_Head
		{
			get
			{
				return this._Resver_Head.Entity;
			}
			set
			{
				Resver_Head previousValue = this._Resver_Head.Entity;
				if (((previousValue != value) 
							|| (this._Resver_Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resver_Head.Entity = null;
						previousValue.Resver_Other.Remove(this);
					}
					this._Resver_Head.Entity = value;
					if ((value != null))
					{
						value.Resver_Other.Add(this);
						this._RHID = value.RHID;
					}
					else
					{
						this._RHID = default(int);
					}
					this.SendPropertyChanged("Resver_Head");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_Site")]
	public partial class Resver_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RSID;
		
		private int _RHID;
		
		private System.DateTime _TargetDate;
		
		private int _DTSIDS;
		
		private int _DTSIDE;
		
		private int _BSID;
		
		private int _BSCID;
		
		private int _BOCID;
		
		private string _PrintTitle;
		
		private string _PrintNote;
		
		private int _UnitPrice;
		
		private int _Pricing;
		
		private int _Ct;
		
		private int _TotalPrice;
		
		private int _SortNo;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntityRef<B_SiteData> _B_SiteData;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<D_TimeSpan> _D_TimeSpan;
		
		private EntityRef<D_TimeSpan> _D_TimeSpan1;
		
		private EntityRef<Resver_Head> _Resver_Head;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRSIDChanging(int value);
    partial void OnRSIDChanged();
    partial void OnRHIDChanging(int value);
    partial void OnRHIDChanged();
    partial void OnTargetDateChanging(System.DateTime value);
    partial void OnTargetDateChanged();
    partial void OnDTSIDSChanging(int value);
    partial void OnDTSIDSChanged();
    partial void OnDTSIDEChanging(int value);
    partial void OnDTSIDEChanged();
    partial void OnBSIDChanging(int value);
    partial void OnBSIDChanged();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnBOCIDChanging(int value);
    partial void OnBOCIDChanged();
    partial void OnPrintTitleChanging(string value);
    partial void OnPrintTitleChanged();
    partial void OnPrintNoteChanging(string value);
    partial void OnPrintNoteChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnPricingChanging(int value);
    partial void OnPricingChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnTotalPriceChanging(int value);
    partial void OnTotalPriceChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Resver_Site()
		{
			this._B_SiteData = default(EntityRef<B_SiteData>);
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._D_TimeSpan = default(EntityRef<D_TimeSpan>);
			this._D_TimeSpan1 = default(EntityRef<D_TimeSpan>);
			this._Resver_Head = default(EntityRef<Resver_Head>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RSID
		{
			get
			{
				return this._RSID;
			}
			set
			{
				if ((this._RSID != value))
				{
					this.OnRSIDChanging(value);
					this.SendPropertyChanging();
					this._RSID = value;
					this.SendPropertyChanged("RSID");
					this.OnRSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHID", DbType="Int NOT NULL")]
		public int RHID
		{
			get
			{
				return this._RHID;
			}
			set
			{
				if ((this._RHID != value))
				{
					if (this._Resver_Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRHIDChanging(value);
					this.SendPropertyChanging();
					this._RHID = value;
					this.SendPropertyChanged("RHID");
					this.OnRHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDate", DbType="DateTime NOT NULL")]
		public System.DateTime TargetDate
		{
			get
			{
				return this._TargetDate;
			}
			set
			{
				if ((this._TargetDate != value))
				{
					this.OnTargetDateChanging(value);
					this.SendPropertyChanging();
					this._TargetDate = value;
					this.SendPropertyChanged("TargetDate");
					this.OnTargetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTSIDS", DbType="Int NOT NULL")]
		public int DTSIDS
		{
			get
			{
				return this._DTSIDS;
			}
			set
			{
				if ((this._DTSIDS != value))
				{
					if (this._D_TimeSpan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDTSIDSChanging(value);
					this.SendPropertyChanging();
					this._DTSIDS = value;
					this.SendPropertyChanged("DTSIDS");
					this.OnDTSIDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTSIDE", DbType="Int NOT NULL")]
		public int DTSIDE
		{
			get
			{
				return this._DTSIDE;
			}
			set
			{
				if ((this._DTSIDE != value))
				{
					if (this._D_TimeSpan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDTSIDEChanging(value);
					this.SendPropertyChanging();
					this._DTSIDE = value;
					this.SendPropertyChanged("DTSIDE");
					this.OnDTSIDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSID", DbType="Int NOT NULL")]
		public int BSID
		{
			get
			{
				return this._BSID;
			}
			set
			{
				if ((this._BSID != value))
				{
					if (this._B_SiteData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSIDChanging(value);
					this.SendPropertyChanging();
					this._BSID = value;
					this.SendPropertyChanged("BSID");
					this.OnBSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", DbType="Int NOT NULL")]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOCID", DbType="Int NOT NULL")]
		public int BOCID
		{
			get
			{
				return this._BOCID;
			}
			set
			{
				if ((this._BOCID != value))
				{
					this.OnBOCIDChanging(value);
					this.SendPropertyChanging();
					this._BOCID = value;
					this.SendPropertyChanged("BOCID");
					this.OnBOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTitle", DbType="NVarChar(100)")]
		public string PrintTitle
		{
			get
			{
				return this._PrintTitle;
			}
			set
			{
				if ((this._PrintTitle != value))
				{
					this.OnPrintTitleChanging(value);
					this.SendPropertyChanging();
					this._PrintTitle = value;
					this.SendPropertyChanged("PrintTitle");
					this.OnPrintTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintNote", DbType="NVarChar(100)")]
		public string PrintNote
		{
			get
			{
				return this._PrintNote;
			}
			set
			{
				if ((this._PrintNote != value))
				{
					this.OnPrintNoteChanging(value);
					this.SendPropertyChanging();
					this._PrintNote = value;
					this.SendPropertyChanged("PrintNote");
					this.OnPrintNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pricing", DbType="Int NOT NULL")]
		public int Pricing
		{
			get
			{
				return this._Pricing;
			}
			set
			{
				if ((this._Pricing != value))
				{
					this.OnPricingChanging(value);
					this.SendPropertyChanging();
					this._Pricing = value;
					this.SendPropertyChanged("Pricing");
					this.OnPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Int NOT NULL")]
		public int TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_SiteData_Resver_Site", Storage="_B_SiteData", ThisKey="BSID", OtherKey="BSID", IsForeignKey=true)]
		public B_SiteData B_SiteData
		{
			get
			{
				return this._B_SiteData.Entity;
			}
			set
			{
				B_SiteData previousValue = this._B_SiteData.Entity;
				if (((previousValue != value) 
							|| (this._B_SiteData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_SiteData.Entity = null;
						previousValue.Resver_Site.Remove(this);
					}
					this._B_SiteData.Entity = value;
					if ((value != null))
					{
						value.Resver_Site.Add(this);
						this._BSID = value.BSID;
					}
					else
					{
						this._BSID = default(int);
					}
					this.SendPropertyChanged("B_SiteData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Site", Storage="_B_StaticCode", ThisKey="BSCID", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.Resver_Site.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.Resver_Site.Add(this);
						this._BSCID = value.BSCID;
					}
					else
					{
						this._BSCID = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_TimeSpan_Resver_Site", Storage="_D_TimeSpan", ThisKey="DTSIDE", OtherKey="DTSID", IsForeignKey=true)]
		public D_TimeSpan D_TimeSpan
		{
			get
			{
				return this._D_TimeSpan.Entity;
			}
			set
			{
				D_TimeSpan previousValue = this._D_TimeSpan.Entity;
				if (((previousValue != value) 
							|| (this._D_TimeSpan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_TimeSpan.Entity = null;
						previousValue.Resver_Site.Remove(this);
					}
					this._D_TimeSpan.Entity = value;
					if ((value != null))
					{
						value.Resver_Site.Add(this);
						this._DTSIDE = value.DTSID;
					}
					else
					{
						this._DTSIDE = default(int);
					}
					this.SendPropertyChanged("D_TimeSpan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_TimeSpan_Resver_Site1", Storage="_D_TimeSpan1", ThisKey="DTSIDS", OtherKey="DTSID", IsForeignKey=true)]
		public D_TimeSpan D_TimeSpan1
		{
			get
			{
				return this._D_TimeSpan1.Entity;
			}
			set
			{
				D_TimeSpan previousValue = this._D_TimeSpan1.Entity;
				if (((previousValue != value) 
							|| (this._D_TimeSpan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_TimeSpan1.Entity = null;
						previousValue.Resver_Site1.Remove(this);
					}
					this._D_TimeSpan1.Entity = value;
					if ((value != null))
					{
						value.Resver_Site1.Add(this);
						this._DTSIDS = value.DTSID;
					}
					else
					{
						this._DTSIDS = default(int);
					}
					this.SendPropertyChanged("D_TimeSpan1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Site", Storage="_Resver_Head", ThisKey="RHID", OtherKey="RHID", IsForeignKey=true)]
		public Resver_Head Resver_Head
		{
			get
			{
				return this._Resver_Head.Entity;
			}
			set
			{
				Resver_Head previousValue = this._Resver_Head.Entity;
				if (((previousValue != value) 
							|| (this._Resver_Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resver_Head.Entity = null;
						previousValue.Resver_Site.Remove(this);
					}
					this._Resver_Head.Entity = value;
					if ((value != null))
					{
						value.Resver_Site.Add(this);
						this._RHID = value.RHID;
					}
					else
					{
						this._RHID = default(int);
					}
					this.SendPropertyChanged("Resver_Head");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_Throw")]
	public partial class Resver_Throw : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RTID;
		
		private int _RHID;
		
		private System.DateTime _TargetDate;
		
		private int _BSCID;
		
		private int _BSID;
		
		private int _BOCID;
		
		private string _Title;
		
		private string _PrintTitle;
		
		private string _PrintNote;
		
		private int _UnitPrice;
		
		private int _Pricing;
		
		private int _Ct;
		
		private int _TotalPrice;
		
		private int _SortNo;
		
		private string _Note;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Throw_Food> _Resver_Throw_Food;
		
		private EntityRef<B_SiteData> _B_SiteData;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<Resver_Head> _Resver_Head;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTIDChanging(int value);
    partial void OnRTIDChanged();
    partial void OnRHIDChanging(int value);
    partial void OnRHIDChanged();
    partial void OnTargetDateChanging(System.DateTime value);
    partial void OnTargetDateChanged();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnBSIDChanging(int value);
    partial void OnBSIDChanged();
    partial void OnBOCIDChanging(int value);
    partial void OnBOCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPrintTitleChanging(string value);
    partial void OnPrintTitleChanged();
    partial void OnPrintNoteChanging(string value);
    partial void OnPrintNoteChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnPricingChanging(int value);
    partial void OnPricingChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnTotalPriceChanging(int value);
    partial void OnTotalPriceChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public Resver_Throw()
		{
			this._Resver_Throw_Food = new EntitySet<Resver_Throw_Food>(new Action<Resver_Throw_Food>(this.attach_Resver_Throw_Food), new Action<Resver_Throw_Food>(this.detach_Resver_Throw_Food));
			this._B_SiteData = default(EntityRef<B_SiteData>);
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._Resver_Head = default(EntityRef<Resver_Head>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RTID
		{
			get
			{
				return this._RTID;
			}
			set
			{
				if ((this._RTID != value))
				{
					this.OnRTIDChanging(value);
					this.SendPropertyChanging();
					this._RTID = value;
					this.SendPropertyChanged("RTID");
					this.OnRTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHID", DbType="Int NOT NULL")]
		public int RHID
		{
			get
			{
				return this._RHID;
			}
			set
			{
				if ((this._RHID != value))
				{
					if (this._Resver_Head.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRHIDChanging(value);
					this.SendPropertyChanging();
					this._RHID = value;
					this.SendPropertyChanged("RHID");
					this.OnRHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDate", DbType="DateTime NOT NULL")]
		public System.DateTime TargetDate
		{
			get
			{
				return this._TargetDate;
			}
			set
			{
				if ((this._TargetDate != value))
				{
					this.OnTargetDateChanging(value);
					this.SendPropertyChanging();
					this._TargetDate = value;
					this.SendPropertyChanged("TargetDate");
					this.OnTargetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", DbType="Int NOT NULL")]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSID", DbType="Int NOT NULL")]
		public int BSID
		{
			get
			{
				return this._BSID;
			}
			set
			{
				if ((this._BSID != value))
				{
					if (this._B_SiteData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSIDChanging(value);
					this.SendPropertyChanging();
					this._BSID = value;
					this.SendPropertyChanged("BSID");
					this.OnBSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOCID", DbType="Int NOT NULL")]
		public int BOCID
		{
			get
			{
				return this._BOCID;
			}
			set
			{
				if ((this._BOCID != value))
				{
					this.OnBOCIDChanging(value);
					this.SendPropertyChanging();
					this._BOCID = value;
					this.SendPropertyChanged("BOCID");
					this.OnBOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTitle", DbType="NVarChar(100)")]
		public string PrintTitle
		{
			get
			{
				return this._PrintTitle;
			}
			set
			{
				if ((this._PrintTitle != value))
				{
					this.OnPrintTitleChanging(value);
					this.SendPropertyChanging();
					this._PrintTitle = value;
					this.SendPropertyChanged("PrintTitle");
					this.OnPrintTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintNote", DbType="NVarChar(100)")]
		public string PrintNote
		{
			get
			{
				return this._PrintNote;
			}
			set
			{
				if ((this._PrintNote != value))
				{
					this.OnPrintNoteChanging(value);
					this.SendPropertyChanging();
					this._PrintNote = value;
					this.SendPropertyChanged("PrintNote");
					this.OnPrintNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pricing", DbType="Int NOT NULL")]
		public int Pricing
		{
			get
			{
				return this._Pricing;
			}
			set
			{
				if ((this._Pricing != value))
				{
					this.OnPricingChanging(value);
					this.SendPropertyChanging();
					this._Pricing = value;
					this.SendPropertyChanged("Pricing");
					this.OnPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Int NOT NULL")]
		public int TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Throw_Resver_Throw_Food", Storage="_Resver_Throw_Food", ThisKey="RTID", OtherKey="RTID")]
		public EntitySet<Resver_Throw_Food> Resver_Throw_Food
		{
			get
			{
				return this._Resver_Throw_Food;
			}
			set
			{
				this._Resver_Throw_Food.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_SiteData_Resver_Throw", Storage="_B_SiteData", ThisKey="BSID", OtherKey="BSID", IsForeignKey=true)]
		public B_SiteData B_SiteData
		{
			get
			{
				return this._B_SiteData.Entity;
			}
			set
			{
				B_SiteData previousValue = this._B_SiteData.Entity;
				if (((previousValue != value) 
							|| (this._B_SiteData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_SiteData.Entity = null;
						previousValue.Resver_Throw.Remove(this);
					}
					this._B_SiteData.Entity = value;
					if ((value != null))
					{
						value.Resver_Throw.Add(this);
						this._BSID = value.BSID;
					}
					else
					{
						this._BSID = default(int);
					}
					this.SendPropertyChanged("B_SiteData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Throw", Storage="_B_StaticCode", ThisKey="BSCID", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.Resver_Throw.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.Resver_Throw.Add(this);
						this._BSCID = value.BSCID;
					}
					else
					{
						this._BSCID = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Head_Resver_Throw", Storage="_Resver_Head", ThisKey="RHID", OtherKey="RHID", IsForeignKey=true)]
		public Resver_Head Resver_Head
		{
			get
			{
				return this._Resver_Head.Entity;
			}
			set
			{
				Resver_Head previousValue = this._Resver_Head.Entity;
				if (((previousValue != value) 
							|| (this._Resver_Head.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resver_Head.Entity = null;
						previousValue.Resver_Throw.Remove(this);
					}
					this._Resver_Head.Entity = value;
					if ((value != null))
					{
						value.Resver_Throw.Add(this);
						this._RHID = value.RHID;
					}
					else
					{
						this._RHID = default(int);
					}
					this.SendPropertyChanged("Resver_Head");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Throw_Food(Resver_Throw_Food entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Throw = this;
		}
		
		private void detach_Resver_Throw_Food(Resver_Throw_Food entity)
		{
			this.SendPropertyChanging();
			entity.Resver_Throw = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resver_Throw_Food")]
	public partial class Resver_Throw_Food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RTFID;
		
		private int _RTID;
		
		private int _DFCID;
		
		private int _BSCID;
		
		private int _BPID;
		
		private int _Ct;
		
		private int _UnitPrice;
		
		private int _Price;
		
		private EntityRef<B_Partner> _B_Partner;
		
		private EntityRef<B_StaticCode> _B_StaticCode;
		
		private EntityRef<D_FoodCategory> _D_FoodCategory;
		
		private EntityRef<Resver_Throw> _Resver_Throw;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTFIDChanging(int value);
    partial void OnRTFIDChanged();
    partial void OnRTIDChanging(int value);
    partial void OnRTIDChanged();
    partial void OnDFCIDChanging(int value);
    partial void OnDFCIDChanged();
    partial void OnBSCIDChanging(int value);
    partial void OnBSCIDChanged();
    partial void OnBPIDChanging(int value);
    partial void OnBPIDChanged();
    partial void OnCtChanging(int value);
    partial void OnCtChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public Resver_Throw_Food()
		{
			this._B_Partner = default(EntityRef<B_Partner>);
			this._B_StaticCode = default(EntityRef<B_StaticCode>);
			this._D_FoodCategory = default(EntityRef<D_FoodCategory>);
			this._Resver_Throw = default(EntityRef<Resver_Throw>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTFID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RTFID
		{
			get
			{
				return this._RTFID;
			}
			set
			{
				if ((this._RTFID != value))
				{
					this.OnRTFIDChanging(value);
					this.SendPropertyChanging();
					this._RTFID = value;
					this.SendPropertyChanged("RTFID");
					this.OnRTFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTID", DbType="Int NOT NULL")]
		public int RTID
		{
			get
			{
				return this._RTID;
			}
			set
			{
				if ((this._RTID != value))
				{
					if (this._Resver_Throw.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRTIDChanging(value);
					this.SendPropertyChanging();
					this._RTID = value;
					this.SendPropertyChanged("RTID");
					this.OnRTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFCID", DbType="Int NOT NULL")]
		public int DFCID
		{
			get
			{
				return this._DFCID;
			}
			set
			{
				if ((this._DFCID != value))
				{
					if (this._D_FoodCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDFCIDChanging(value);
					this.SendPropertyChanging();
					this._DFCID = value;
					this.SendPropertyChanged("DFCID");
					this.OnDFCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSCID", DbType="Int NOT NULL")]
		public int BSCID
		{
			get
			{
				return this._BSCID;
			}
			set
			{
				if ((this._BSCID != value))
				{
					if (this._B_StaticCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSCIDChanging(value);
					this.SendPropertyChanging();
					this._BSCID = value;
					this.SendPropertyChanged("BSCID");
					this.OnBSCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPID", DbType="Int NOT NULL")]
		public int BPID
		{
			get
			{
				return this._BPID;
			}
			set
			{
				if ((this._BPID != value))
				{
					if (this._B_Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBPIDChanging(value);
					this.SendPropertyChanging();
					this._BPID = value;
					this.SendPropertyChanged("BPID");
					this.OnBPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ct", DbType="Int NOT NULL")]
		public int Ct
		{
			get
			{
				return this._Ct;
			}
			set
			{
				if ((this._Ct != value))
				{
					this.OnCtChanging(value);
					this.SendPropertyChanging();
					this._Ct = value;
					this.SendPropertyChanged("Ct");
					this.OnCtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Partner_Resver_Throw_Food", Storage="_B_Partner", ThisKey="BPID", OtherKey="BPID", IsForeignKey=true)]
		public B_Partner B_Partner
		{
			get
			{
				return this._B_Partner.Entity;
			}
			set
			{
				B_Partner previousValue = this._B_Partner.Entity;
				if (((previousValue != value) 
							|| (this._B_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Partner.Entity = null;
						previousValue.Resver_Throw_Food.Remove(this);
					}
					this._B_Partner.Entity = value;
					if ((value != null))
					{
						value.Resver_Throw_Food.Add(this);
						this._BPID = value.BPID;
					}
					else
					{
						this._BPID = default(int);
					}
					this.SendPropertyChanged("B_Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_StaticCode_Resver_Throw_Food", Storage="_B_StaticCode", ThisKey="BSCID", OtherKey="BSCID", IsForeignKey=true)]
		public B_StaticCode B_StaticCode
		{
			get
			{
				return this._B_StaticCode.Entity;
			}
			set
			{
				B_StaticCode previousValue = this._B_StaticCode.Entity;
				if (((previousValue != value) 
							|| (this._B_StaticCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_StaticCode.Entity = null;
						previousValue.Resver_Throw_Food.Remove(this);
					}
					this._B_StaticCode.Entity = value;
					if ((value != null))
					{
						value.Resver_Throw_Food.Add(this);
						this._BSCID = value.BSCID;
					}
					else
					{
						this._BSCID = default(int);
					}
					this.SendPropertyChanged("B_StaticCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_FoodCategory_Resver_Throw_Food", Storage="_D_FoodCategory", ThisKey="DFCID", OtherKey="DFCID", IsForeignKey=true)]
		public D_FoodCategory D_FoodCategory
		{
			get
			{
				return this._D_FoodCategory.Entity;
			}
			set
			{
				D_FoodCategory previousValue = this._D_FoodCategory.Entity;
				if (((previousValue != value) 
							|| (this._D_FoodCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._D_FoodCategory.Entity = null;
						previousValue.Resver_Throw_Food.Remove(this);
					}
					this._D_FoodCategory.Entity = value;
					if ((value != null))
					{
						value.Resver_Throw_Food.Add(this);
						this._DFCID = value.DFCID;
					}
					else
					{
						this._DFCID = default(int);
					}
					this.SendPropertyChanged("D_FoodCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resver_Throw_Resver_Throw_Food", Storage="_Resver_Throw", ThisKey="RTID", OtherKey="RTID", IsForeignKey=true)]
		public Resver_Throw Resver_Throw
		{
			get
			{
				return this._Resver_Throw.Entity;
			}
			set
			{
				Resver_Throw previousValue = this._Resver_Throw.Entity;
				if (((previousValue != value) 
							|| (this._Resver_Throw.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resver_Throw.Entity = null;
						previousValue.Resver_Throw_Food.Remove(this);
					}
					this._Resver_Throw.Entity = value;
					if ((value != null))
					{
						value.Resver_Throw_Food.Add(this);
						this._RTID = value.RTID;
					}
					else
					{
						this._RTID = default(int);
					}
					this.SendPropertyChanged("Resver_Throw");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserData")]
	public partial class UserData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private string _UserName;
		
		private string _LoginAccount;
		
		private string _LoginPassword;
		
		private string _Note;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private System.DateTime _LoginDate;
		
		private EntitySet<UserLog> _UserLog;
		
		private EntitySet<M_Group_User> _M_Group_User;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginAccountChanging(string value);
    partial void OnLoginAccountChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    partial void OnLoginDateChanging(System.DateTime value);
    partial void OnLoginDateChanged();
    #endregion
		
		public UserData()
		{
			this._UserLog = new EntitySet<UserLog>(new Action<UserLog>(this.attach_UserLog), new Action<UserLog>(this.detach_UserLog));
			this._M_Group_User = new EntitySet<M_Group_User>(new Action<M_Group_User>(this.attach_M_Group_User), new Action<M_Group_User>(this.detach_M_Group_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginAccount", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginAccount
		{
			get
			{
				return this._LoginAccount;
			}
			set
			{
				if ((this._LoginAccount != value))
				{
					this.OnLoginAccountChanging(value);
					this.SendPropertyChanging();
					this._LoginAccount = value;
					this.SendPropertyChanged("LoginAccount");
					this.OnLoginAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserData_UserLog", Storage="_UserLog", ThisKey="UID", OtherKey="UID")]
		public EntitySet<UserLog> UserLog
		{
			get
			{
				return this._UserLog;
			}
			set
			{
				this._UserLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserData_M_Group_User", Storage="_M_Group_User", ThisKey="UID", OtherKey="UID")]
		public EntitySet<M_Group_User> M_Group_User
		{
			get
			{
				return this._M_Group_User;
			}
			set
			{
				this._M_Group_User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserLog(UserLog entity)
		{
			this.SendPropertyChanging();
			entity.UserData = this;
		}
		
		private void detach_UserLog(UserLog entity)
		{
			this.SendPropertyChanging();
			entity.UserData = null;
		}
		
		private void attach_M_Group_User(M_Group_User entity)
		{
			this.SendPropertyChanging();
			entity.UserData = this;
		}
		
		private void detach_M_Group_User(M_Group_User entity)
		{
			this.SendPropertyChanging();
			entity.UserData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.D_PayType")]
	public partial class D_PayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DPTID;
		
		private int _BCID;
		
		private string _Code;
		
		private string _Title;
		
		private string _AccountingNo;
		
		private string _CustormerNo;
		
		private bool _InvoiceFlag;
		
		private bool _DepositFlag;
		
		private bool _RestaurantFlag;
		
		private bool _SimpleCheckoutFlag;
		
		private bool _SimpleDepositFlag;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.DateTime _CreDate;
		
		private int _CreUID;
		
		private System.DateTime _UpdDate;
		
		private int _UpdUID;
		
		private EntitySet<Resver_Bill_Header> _Resver_Bill_Header;
		
		private EntityRef<B_Category> _B_Category;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDPTIDChanging(int value);
    partial void OnDPTIDChanged();
    partial void OnBCIDChanging(int value);
    partial void OnBCIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAccountingNoChanging(string value);
    partial void OnAccountingNoChanged();
    partial void OnCustormerNoChanging(string value);
    partial void OnCustormerNoChanged();
    partial void OnInvoiceFlagChanging(bool value);
    partial void OnInvoiceFlagChanged();
    partial void OnDepositFlagChanging(bool value);
    partial void OnDepositFlagChanged();
    partial void OnRestaurantFlagChanging(bool value);
    partial void OnRestaurantFlagChanged();
    partial void OnSimpleCheckoutFlagChanging(bool value);
    partial void OnSimpleCheckoutFlagChanged();
    partial void OnSimpleDepositFlagChanging(bool value);
    partial void OnSimpleDepositFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnCreUIDChanging(int value);
    partial void OnCreUIDChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    partial void OnUpdUIDChanging(int value);
    partial void OnUpdUIDChanged();
    #endregion
		
		public D_PayType()
		{
			this._Resver_Bill_Header = new EntitySet<Resver_Bill_Header>(new Action<Resver_Bill_Header>(this.attach_Resver_Bill_Header), new Action<Resver_Bill_Header>(this.detach_Resver_Bill_Header));
			this._B_Category = default(EntityRef<B_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DPTID
		{
			get
			{
				return this._DPTID;
			}
			set
			{
				if ((this._DPTID != value))
				{
					this.OnDPTIDChanging(value);
					this.SendPropertyChanging();
					this._DPTID = value;
					this.SendPropertyChanged("DPTID");
					this.OnDPTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCID", DbType="Int NOT NULL")]
		public int BCID
		{
			get
			{
				return this._BCID;
			}
			set
			{
				if ((this._BCID != value))
				{
					if (this._B_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBCIDChanging(value);
					this.SendPropertyChanging();
					this._BCID = value;
					this.SendPropertyChanged("BCID");
					this.OnBCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingNo", DbType="VarChar(10)")]
		public string AccountingNo
		{
			get
			{
				return this._AccountingNo;
			}
			set
			{
				if ((this._AccountingNo != value))
				{
					this.OnAccountingNoChanging(value);
					this.SendPropertyChanging();
					this._AccountingNo = value;
					this.SendPropertyChanged("AccountingNo");
					this.OnAccountingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustormerNo", DbType="VarChar(20)")]
		public string CustormerNo
		{
			get
			{
				return this._CustormerNo;
			}
			set
			{
				if ((this._CustormerNo != value))
				{
					this.OnCustormerNoChanging(value);
					this.SendPropertyChanging();
					this._CustormerNo = value;
					this.SendPropertyChanged("CustormerNo");
					this.OnCustormerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceFlag", DbType="Bit NOT NULL")]
		public bool InvoiceFlag
		{
			get
			{
				return this._InvoiceFlag;
			}
			set
			{
				if ((this._InvoiceFlag != value))
				{
					this.OnInvoiceFlagChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFlag = value;
					this.SendPropertyChanged("InvoiceFlag");
					this.OnInvoiceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositFlag", DbType="Bit NOT NULL")]
		public bool DepositFlag
		{
			get
			{
				return this._DepositFlag;
			}
			set
			{
				if ((this._DepositFlag != value))
				{
					this.OnDepositFlagChanging(value);
					this.SendPropertyChanging();
					this._DepositFlag = value;
					this.SendPropertyChanged("DepositFlag");
					this.OnDepositFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestaurantFlag", DbType="Bit NOT NULL")]
		public bool RestaurantFlag
		{
			get
			{
				return this._RestaurantFlag;
			}
			set
			{
				if ((this._RestaurantFlag != value))
				{
					this.OnRestaurantFlagChanging(value);
					this.SendPropertyChanging();
					this._RestaurantFlag = value;
					this.SendPropertyChanged("RestaurantFlag");
					this.OnRestaurantFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimpleCheckoutFlag", DbType="Bit NOT NULL")]
		public bool SimpleCheckoutFlag
		{
			get
			{
				return this._SimpleCheckoutFlag;
			}
			set
			{
				if ((this._SimpleCheckoutFlag != value))
				{
					this.OnSimpleCheckoutFlagChanging(value);
					this.SendPropertyChanging();
					this._SimpleCheckoutFlag = value;
					this.SendPropertyChanged("SimpleCheckoutFlag");
					this.OnSimpleCheckoutFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimpleDepositFlag", DbType="Bit NOT NULL")]
		public bool SimpleDepositFlag
		{
			get
			{
				return this._SimpleDepositFlag;
			}
			set
			{
				if ((this._SimpleDepositFlag != value))
				{
					this.OnSimpleDepositFlagChanging(value);
					this.SendPropertyChanging();
					this._SimpleDepositFlag = value;
					this.SendPropertyChanged("SimpleDepositFlag");
					this.OnSimpleDepositFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreUID", DbType="Int NOT NULL")]
		public int CreUID
		{
			get
			{
				return this._CreUID;
			}
			set
			{
				if ((this._CreUID != value))
				{
					this.OnCreUIDChanging(value);
					this.SendPropertyChanging();
					this._CreUID = value;
					this.SendPropertyChanged("CreUID");
					this.OnCreUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUID", DbType="Int NOT NULL")]
		public int UpdUID
		{
			get
			{
				return this._UpdUID;
			}
			set
			{
				if ((this._UpdUID != value))
				{
					this.OnUpdUIDChanging(value);
					this.SendPropertyChanging();
					this._UpdUID = value;
					this.SendPropertyChanged("UpdUID");
					this.OnUpdUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="D_PayType_Resver_Bill_Header", Storage="_Resver_Bill_Header", ThisKey="DPTID", OtherKey="DPTID")]
		public EntitySet<Resver_Bill_Header> Resver_Bill_Header
		{
			get
			{
				return this._Resver_Bill_Header;
			}
			set
			{
				this._Resver_Bill_Header.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_Category_D_PayType", Storage="_B_Category", ThisKey="BCID", OtherKey="BCID", IsForeignKey=true)]
		public B_Category B_Category
		{
			get
			{
				return this._B_Category.Entity;
			}
			set
			{
				B_Category previousValue = this._B_Category.Entity;
				if (((previousValue != value) 
							|| (this._B_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_Category.Entity = null;
						previousValue.D_PayType.Remove(this);
					}
					this._B_Category.Entity = value;
					if ((value != null))
					{
						value.D_PayType.Add(this);
						this._BCID = value.BCID;
					}
					else
					{
						this._BCID = default(int);
					}
					this.SendPropertyChanged("B_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resver_Bill_Header(Resver_Bill_Header entity)
		{
			this.SendPropertyChanging();
			entity.D_PayType = this;
		}
		
		private void detach_Resver_Bill_Header(Resver_Bill_Header entity)
		{
			this.SendPropertyChanging();
			entity.D_PayType = null;
		}
	}
}
#pragma warning restore 1591
